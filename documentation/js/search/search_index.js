var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddMoviesDto.html",[0,0.089,1,1.894]],["body/classes/AddMoviesDto.html",[0,0.127,1,2.701,2,1.215,3,0.263,4,0.224,5,0.224,6,2.882,7,0.39,8,1.757,9,4.339,10,2.457,11,3.372,12,3.372,13,3.372,14,2.701,15,0.75,16,0.03,17,1.658,18,1.793,19,3.361,20,2.994,21,0.917,22,3.44,23,3.361,24,3.44,25,3.44,26,2.288,27,2.994,28,3.44,29,3.44,30,3.44,31,0.406,32,2.719,33,1.04,34,2.588,35,2.327,36,2.24,37,1.315,38,1.546,39,1.546,40,1.546,41,0.263,42,3.852,43,2.882,44,3.44,45,0.021,46,0.021]],["title/classes/AddPaymentDto.html",[0,0.089,47,1.894]],["body/classes/AddPaymentDto.html",[0,0.127,2,1.215,3,0.263,4,0.224,5,0.224,7,0.39,8,1.757,10,2.768,11,3.372,13,3.372,14,2.701,15,0.75,16,0.03,17,1.658,18,1.793,19,3.361,20,2.994,21,0.917,23,3.361,26,2.288,27,2.994,31,0.406,32,2.719,33,1.04,34,2.588,35,2.327,36,2.24,37,1.315,38,1.546,39,1.546,40,1.546,41,0.263,42,3.852,43,2.882,45,0.021,46,0.021,47,2.701,48,2.882,49,2.994,50,4.339,51,3.44,52,3.44,53,3.44,54,3.44,55,3.44,56,3.44,57,3.44]],["title/classes/AddTheaterDto.html",[0,0.089,58,1.894]],["body/classes/AddTheaterDto.html",[0,0.12,2,1.114,3,0.241,4,0.206,5,0.206,7,0.357,8,1.656,10,2.646,12,3.224,14,2.909,15,0.762,16,0.03,17,1.616,18,1.823,19,3.167,20,3.472,21,0.932,23,2.304,26,2.562,27,3.64,31,0.383,32,2.748,33,0.953,34,2.396,35,2.595,36,2.052,37,1.205,38,1.416,39,1.416,40,1.416,41,0.241,45,0.02,46,0.02,58,2.545,59,2.64,60,4.148,61,4.148,62,3.619,63,0.437,64,4.148,65,3.151,66,3.151,67,3.151,68,3.151,69,3.151,70,3.151,71,3.151,72,3.151,73,4.332]],["title/classes/AddUserDto.html",[0,0.089,74,1.894]],["body/classes/AddUserDto.html",[0,0.13,2,1.262,3,0.274,4,0.233,5,0.233,7,0.405,8,1.802,15,0.71,16,0.03,17,1.676,18,1.697,20,2.327,21,0.868,26,1.952,27,2.327,31,0.416,32,2.621,33,1.081,34,2.371,35,2.118,36,2.327,37,1.366,38,1.605,39,1.605,40,1.605,41,0.274,45,0.022,46,0.022,49,3.436,74,2.77,75,2.993,76,4.264,77,4.421,78,3.436,79,3.573,80,3.573,81,4.715,82,3.573,83,4.715,84,4.715,85,4.715,86,4.715,87,3.573,88,3.573,89,3.573,90,2.77,91,3.573,92,4.715,93,3.573]],["title/controllers/AppController.html",[94,1.139,95,2.099]],["body/controllers/AppController.html",[0,0.116,3,0.32,4,0.273,5,0.273,7,0.473,16,0.03,17,1.459,18,1.265,21,0.647,31,0.461,41,0.32,45,0.024,46,0.024,63,0.369,94,2.103,95,3.397,96,1.477,97,3.503,98,0.807,99,3.064,100,1.459,101,4.987,102,4.181,103,1.081,104,0.776,105,3.038,106,3.503,107,2.457,108,2.457,109,1.477,110,4.181]],["title/modules/AppModule.html",[111,1.232,112,2.099]],["body/modules/AppModule.html",[0,0.084,3,0.233,4,0.198,5,0.198,15,0.384,16,0.031,31,0.553,41,0.233,45,0.019,46,0.019,63,0.268,76,2.222,78,1.98,95,3.163,96,1.493,98,0.654,104,0.564,105,3.053,106,2.547,111,2.007,112,4.135,113,1.366,114,1.899,115,2.547,116,2.547,117,2.547,118,3.356,119,3.356,120,3.356,121,3.356,122,2.259,123,1.625,124,1.625,125,3.04,126,1.716,127,2.483,128,2.483,129,1.786,130,1.162,131,3.04,132,1.899,133,2.222,134,1.381,135,1.786,136,3.04,137,1.75,138,2.547,139,3.04,140,3.04,141,3.04,142,3.04,143,3.04,144,3.04,145,2.547,146,3.04,147,3.04,148,3.04,149,3.04,150,3.04,151,3.04,152,3.04,153,3.04,154,3.04,155,3.04]],["title/injectables/AppService.html",[105,1.723,156,0.975]],["body/injectables/AppService.html",[0,0.12,3,0.333,4,0.284,5,0.284,7,0.492,16,0.03,17,1.495,21,0.673,31,0.384,41,0.333,45,0.024,46,0.024,63,0.384,98,0.827,99,3.139,100,1.495,101,5.055,103,1.124,104,0.807,105,2.856,109,1.536,156,1.616,157,2.126,158,3.643,159,2.856,160,4.348,161,4.348,162,4.348]],["title/classes/HttpExceptionFilter.html",[0,0.089,163,2.356]],["body/classes/HttpExceptionFilter.html",[0,0.105,2,1.346,3,0.292,4,0.249,5,0.249,7,0.431,15,0.482,16,0.03,21,0.589,31,0.434,41,0.292,45,0.022,46,0.022,100,1.376,103,0.985,104,0.708,145,4.561,163,3.594,164,3.192,165,4.12,166,5.444,167,5.444,168,4.917,169,4.82,170,5.752,171,3.81,172,1.246,173,1.246,174,1.246,175,3.192,176,3.192,177,4.917,178,4.917,179,3.192,180,3.81,181,3.075,182,3.81,183,3.81,184,3.81,185,3.81,186,4.12,187,3.81,188,3.81,189,3.81,190,3.81,191,1.578,192,3.81,193,3.81,194,3.81]],["title/classes/Movies.html",[0,0.089,132,1.448]],["body/classes/Movies.html",[0,0.085,2,0.704,3,0.153,4,0.13,5,0.13,7,0.226,8,1.183,9,3.882,11,3.017,12,3.017,13,3.017,15,0.726,16,0.031,17,1.607,18,1.71,21,0.889,26,2.03,31,0.378,32,2.203,33,0.603,34,2.441,35,1.391,37,0.762,38,0.895,39,0.895,40,0.895,41,0.153,45,0.014,46,0.014,63,0.176,90,1.818,98,0.479,100,0.866,103,0.515,132,2.203,134,1.729,172,0.651,173,0.651,174,0.651,176,1.669,191,0.825,195,1.669,196,2.786,197,3.017,198,3.017,199,3.017,200,2.722,201,3.882,202,3.387,203,3.387,204,3.095,205,2.015,206,1.992,207,3.967,208,4.146,209,1.992,210,2.471,211,1.992,212,2.015,213,2.015,214,2.015,215,1.456,216,1.992,217,2.015,218,1.992,219,1.297,220,1.992,221,1.297,222,1.992,223,1.992,224,1.669,225,1.17,226,2.015,227,1.992,228,1.992,229,2.593,230,2.015,231,2.015,232,2.262,233,1.992,234,1.992,235,3.095,236,1.992,237,1.992,238,2.593,239,3.095,240,0.825,241,1.669,242,2.015,243,1.992,244,0.974,245,3.095,246,1.669,247,1.456,248,1.992]],["title/controllers/MoviesController.html",[94,1.139,249,2.099]],["body/controllers/MoviesController.html",[0,0.089,1,3.611,3,0.247,4,0.211,5,0.211,7,0.365,15,0.408,16,0.031,18,1.332,21,0.681,31,0.476,33,0.976,41,0.247,45,0.02,46,0.02,63,0.389,94,1.14,96,1.14,98,0.681,100,1.232,103,1.393,104,0.599,107,1.896,108,1.896,109,1.556,132,2.252,159,2.354,172,1.055,173,1.055,174,1.055,249,2.868,250,2.704,251,2.102,252,4.253,253,3.69,254,2.252,255,4.512,256,2.704,257,4.404,258,3.227,259,1.823,260,2.42,261,2.42,262,1.683,263,1.979,264,1.979,265,4.404,266,3.227,267,2.102,268,2.102,269,2.102,270,2.704,271,2.679,272,2.704,273,3.227,274,3.227,275,1.45,276,3.227,277,3.227,278,1.45,279,3.227]],["title/modules/MoviesModule.html",[111,1.232,118,1.894]],["body/modules/MoviesModule.html",[0,0.103,3,0.285,4,0.242,5,0.242,16,0.031,31,0.545,41,0.285,45,0.022,46,0.022,63,0.328,96,1.709,98,0.748,104,0.69,111,2.178,113,1.67,114,2.174,118,3.674,122,2.586,123,1.986,124,1.986,127,2.842,128,2.183,129,2.183,130,1.42,132,1.67,133,2.717,134,1.581,135,2.183,249,3.503,252,3.537,271,3.237,272,3.114,280,3.114,281,3.114,282,2.315,283,3.716,284,3.716,285,2.42,286,3.716]],["title/injectables/MoviesService.html",[156,0.975,271,1.723]],["body/injectables/MoviesService.html",[0,0.07,1,3.419,3,0.195,4,0.166,5,0.166,7,0.289,15,0.471,16,0.031,21,0.682,31,0.491,41,0.195,45,0.017,46,0.017,63,0.329,98,0.577,100,1.043,103,1.254,104,0.474,109,1.317,130,0.975,132,2.421,133,1.864,134,1.585,156,1.128,157,1.247,159,1.993,172,1.219,173,1.219,174,1.219,181,2.757,191,2.007,200,1.498,240,1.056,244,1.823,252,4.068,253,3.123,254,2.421,255,4.062,256,3.123,259,1.543,260,2.178,261,2.178,262,1.425,263,1.675,264,1.675,270,2.136,271,1.993,275,1.146,278,1.98,282,2.127,285,1.661,287,2.136,288,2.19,289,2.55,290,2.848,291,2.55,292,3.728,293,2.55,294,2.55,295,1.661,296,2.19,297,1.661,298,2.55,299,2.19,300,4.062,301,2.136,302,2.55,303,2.55,304,2.55,305,2.55,306,2.55,307,2.55,308,2.428,309,2.55,310,1.661,311,2.55,312,1.661,313,3.728,314,2.136,315,2.55,316,2.428,317,2.55,318,2.136,319,1.661,320,1.498,321,2.55]],["title/classes/Payment.html",[0,0.089,137,1.334]],["body/classes/Payment.html",[0,0.089,2,0.738,3,0.16,4,0.136,5,0.136,7,0.237,8,1.227,10,2.531,11,3.084,13,3.084,15,0.712,16,0.031,17,1.574,18,1.702,21,0.87,26,2.07,31,0.418,32,2.246,33,0.632,34,2.128,35,1.757,37,0.799,38,0.939,39,0.939,40,0.939,41,0.16,45,0.015,46,0.015,50,3.967,62,2.347,63,0.185,90,1.886,98,0.497,126,1.899,134,1.839,137,2.07,186,3.276,196,2.858,197,3.084,198,3.084,199,3.084,205,2.091,207,3.872,208,4.083,210,2.546,212,2.091,213,2.091,217,2.091,219,1.361,221,2.091,225,1.886,226,2.858,230,2.858,231,2.858,240,0.865,241,1.75,244,2.146,322,1.75,323,2.089,324,2.089,325,2.089,326,2.089,327,2.089,328,2.089,329,2.089,330,2.089,331,3.21,332,4.388,333,4.999,334,4.388,335,3.21,336,2.089,337,3.208,338,2.089,339,3.91,340,3.91,341,2.089,342,2.089,343,2.089]],["title/controllers/PaymentController.html",[94,1.139,344,2.099]],["body/controllers/PaymentController.html",[0,0.097,3,0.27,4,0.23,5,0.23,7,0.399,15,0.445,16,0.031,18,1.065,21,0.545,31,0.493,33,1.065,41,0.27,45,0.021,46,0.021,47,3.712,63,0.412,94,1.851,96,1.244,98,0.722,100,1.306,103,1.207,104,0.654,107,2.068,108,2.068,109,1.244,126,1.526,137,2.52,172,1.151,173,1.151,174,1.151,251,2.293,259,1.933,260,2.098,261,2.098,262,1.785,264,2.098,267,2.293,268,2.293,269,2.293,275,1.582,344,3.04,345,2.949,346,3.912,347,2.949,348,4.669,349,3.52,350,2.8,351,2.949,352,3.52,353,3.52,354,3.52,355,3.52]],["title/modules/PaymentModule.html",[111,1.232,119,1.894]],["body/modules/PaymentModule.html",[0,0.097,3,0.269,4,0.229,5,0.229,16,0.031,31,0.552,41,0.269,45,0.021,46,0.021,63,0.31,96,1.647,98,0.721,104,0.652,111,2.13,113,1.577,114,2.094,119,3.71,122,2.491,123,1.876,124,1.876,126,1.523,127,2.738,128,2.062,129,2.062,130,1.342,134,1.523,135,2.062,137,2.166,282,2.279,285,2.286,344,3.407,350,3.186,351,2.941,356,2.941,357,2.941,358,2.679,359,3.51,360,3.51,361,3.51,362,2.941,363,2.566,364,3.51]],["title/injectables/PaymentService.html",[156,0.975,350,1.723]],["body/injectables/PaymentService.html",[0,0.073,3,0.203,4,0.173,5,0.173,7,0.3,15,0.485,16,0.031,21,0.593,31,0.519,41,0.203,45,0.018,46,0.018,47,3.506,63,0.339,98,0.593,100,1.073,103,0.992,104,0.492,109,0.937,130,1.013,137,2.47,138,2.221,156,1.16,157,1.297,159,2.05,172,1.254,173,1.254,174,1.254,181,2.8,191,2.044,240,1.098,254,2.025,259,1.588,260,1.723,261,1.723,262,1.466,263,1.723,264,1.723,275,1.191,278,2.025,282,2.152,285,1.726,288,2.253,290,2.901,295,1.726,296,2.253,297,1.726,299,2.647,300,3.213,301,2.221,308,2.497,310,1.726,312,1.726,316,2.497,319,1.726,320,2.253,346,3.213,347,3.213,350,2.05,358,2.53,362,2.221,365,2.221,366,2.651,367,2.651,368,3.835,369,2.651,370,2.497,371,2.651,372,2.651,373,4.506,374,2.651,375,2.651,376,2.651,377,2.651,378,2.651,379,2.651,380,2.221,381,2.221,382,2.651,383,3.835,384,2.651,385,2.651]],["title/interfaces/SwaggerConfig.html",[386,2.099,387,2.099]],["body/interfaces/SwaggerConfig.html",[3,0.322,4,0.275,5,0.275,7,0.477,8,2.002,15,0.755,16,0.029,17,1.84,41,0.322,45,0.024,46,0.024,63,0.542,386,3.411,387,3.411,388,4.211,389,3.528,390,3.078,391,4.211,392,4.999,393,4.999,394,4.999]],["title/classes/Theater.html",[0,0.089,134,1.054]],["body/classes/Theater.html",[0,0.073,2,0.58,3,0.126,4,0.107,5,0.107,7,0.186,8,1.015,10,2.252,12,2.744,14,1.963,15,0.729,16,0.031,17,1.576,18,1.745,21,0.892,26,2.262,31,0.372,32,2.355,33,0.496,34,2.293,35,2.026,37,0.627,38,0.738,39,0.738,40,0.738,41,0.126,45,0.012,46,0.012,60,3.531,61,3.531,62,3.081,63,0.398,64,3.531,78,1.728,90,1.559,98,0.411,126,0.868,132,2.408,134,1.255,137,2.17,191,0.68,196,2.5,197,2.744,198,2.744,199,2.744,200,2.476,201,2.224,202,3.081,203,3.081,205,1.728,207,4.015,208,4.176,210,2.176,212,1.728,213,1.728,214,1.728,215,1.2,217,1.728,219,1.069,221,2.744,224,1.375,225,1.559,226,1.728,229,2.224,230,2.5,231,2.5,232,1.94,238,2.224,240,0.68,242,1.728,244,1.298,246,1.375,247,1.2,337,1.94,380,1.375,395,1.375,396,1.641,397,1.641,398,1.641,399,1.641,400,1.641,401,1.641,402,1.641,403,1.641,404,1.641,405,1.641,406,1.641,407,1.375,408,1.641,409,2.224,410,1.641,411,1.641,412,1.641,413,1.641,414,2.224,415,1.641,416,1.375,417,1.641,418,1.641,419,2.654,420,1.641]],["title/controllers/TheaterController.html",[94,1.139,421,2.099]],["body/controllers/TheaterController.html",[0,0.089,3,0.246,4,0.209,5,0.209,7,0.364,15,0.406,16,0.031,18,1.327,21,0.679,31,0.475,33,0.971,41,0.246,45,0.02,46,0.02,58,3.607,63,0.388,94,1.766,96,1.134,98,0.679,100,1.228,103,1.389,104,0.596,107,1.886,108,1.886,109,1.55,134,1.943,172,1.049,173,1.049,174,1.049,251,2.091,254,2.246,259,1.817,260,2.414,261,2.414,262,1.677,263,1.971,264,1.971,267,2.091,268,2.091,269,2.091,275,1.442,278,1.442,282,1.911,421,2.857,422,2.69,423,3.676,424,5.373,425,2.69,426,4.388,427,3.21,428,4.388,429,3.21,430,3.676,431,2.69,432,2.69,433,3.21,434,3.21,435,3.21,436,3.21,437,3.21]],["title/modules/TheaterModule.html",[111,1.232,120,1.894]],["body/modules/TheaterModule.html",[0,0.105,3,0.292,4,0.249,5,0.249,16,0.03,31,0.526,41,0.292,45,0.022,46,0.022,63,0.337,96,1.737,98,0.761,104,0.708,111,2.199,113,1.712,114,2.209,120,3.645,122,2.628,123,2.037,124,2.037,127,2.889,128,2.239,129,2.239,130,1.456,134,1.246,135,2.239,282,2.48,421,3.545,432,3.192,438,3.192,439,3.192,440,3.81,441,3.81,442,4.917,443,4.12,444,3.81,445,3.81]],["title/injectables/TheaterService.html",[156,0.975,282,1.232]],["body/injectables/TheaterService.html",[0,0.066,3,0.182,4,0.155,5,0.155,7,0.27,10,2.508,14,3.089,15,0.536,16,0.031,17,1.628,21,0.726,31,0.464,41,0.182,45,0.016,46,0.016,58,3.359,63,0.374,98,0.549,100,0.992,103,1.36,104,0.443,109,1.497,130,0.911,134,1.975,135,1.4,156,1.073,157,1.165,159,1.896,172,1.385,173,1.385,174,1.385,181,2.264,191,1.754,200,1.4,240,0.987,244,1.734,254,2.569,259,1.468,260,2.108,261,2.108,262,1.793,263,1.903,264,1.594,275,1.903,278,1.903,282,1.356,288,2.084,290,2.757,295,1.552,296,2.084,297,1.552,299,1.4,308,2.31,310,1.552,312,1.552,314,1.997,316,2.31,319,1.552,320,1.4,423,2.971,425,2.971,430,2.971,431,1.997,446,1.997,447,4.692,448,3.547,449,2.383,450,2.383,451,3.547,452,2.383,453,2.383,454,3.547,455,3.547,456,2.383,457,4.692,458,4.692,459,1.742,460,2.593,461,3.547,462,2.383,463,2.383,464,2.383,465,2.383,466,2.383,467,2.383,468,2.383,469,3.547]],["title/classes/UnauthorizedException.html",[0,0.089,370,2.099]],["body/classes/UnauthorizedException.html",[0,0.161,2,1.153,3,0.25,4,0.213,5,0.213,16,0.031,21,0.505,31,0.392,41,0.447,45,0.02,46,0.02,63,0.288,104,0.824,126,1.066,169,5.091,175,3.717,263,1.466,288,3.57,296,1.917,370,3.523,460,2.385,470,2.733,471,4.436,472,3.717,473,5.971,474,3.262,475,3.262,476,4.436,477,4.436,478,5.658,479,3.262,480,3.262,481,4.436,482,2.733,483,3.262,484,3.262,485,4.436,486,3.262,487,3.262,488,3.262,489,3.262,490,3.262,491,3.262,492,3.262,493,3.262,494,3.262,495,3.262,496,3.262]],["title/classes/User.html",[0,0.089,126,1.054]],["body/classes/User.html",[0,0.083,2,0.677,3,0.147,4,0.125,5,0.125,7,0.217,8,1.147,15,0.719,16,0.031,17,1.633,18,1.721,21,0.892,26,1.734,31,0.402,32,2.168,33,0.58,34,2.412,35,1.349,37,0.732,38,0.861,39,0.861,40,0.861,41,0.147,45,0.014,46,0.014,49,2.962,63,0.169,76,4.159,77,3.811,78,2.962,90,1.764,98,0.464,100,0.84,103,0.495,126,1.577,137,2.274,196,2.728,197,2.962,198,2.962,199,2.962,200,2.673,202,3.325,203,3.325,205,1.955,207,3.991,208,4.127,210,2.41,212,1.955,213,1.955,214,1.955,215,1.401,217,1.955,219,1.248,221,1.248,225,1.126,226,1.248,230,1.955,231,1.955,232,2.195,240,0.793,242,1.955,244,0.937,254,1.663,278,0.861,337,2.195,381,1.605,407,1.605,409,2.515,414,2.515,416,1.605,497,1.605,498,3.701,499,4.189,500,1.916,501,1.916,502,1.916,503,1.916,504,1.916,505,1.916,506,1.916,507,1.916,508,1.916,509,1.916,510,1.916,511,1.916,512,3.701,513,1.916,514,3.002,515,3.002,516,3.002,517,2.515,518,1.916,519,1.916,520,1.916,521,1.605]],["title/controllers/UserController.html",[94,1.139,522,2.099]],["body/controllers/UserController.html",[0,0.097,3,0.27,4,0.23,5,0.23,7,0.399,15,0.445,16,0.031,18,1.065,21,0.545,31,0.493,33,1.065,41,0.27,45,0.021,46,0.021,63,0.412,74,3.676,94,1.851,96,1.244,98,0.722,100,1.306,103,1.207,104,0.654,107,2.068,108,2.068,109,1.244,126,1.99,172,1.151,173,1.151,174,1.151,251,2.293,259,1.933,260,2.098,261,2.098,262,1.785,263,2.098,264,2.098,267,2.293,268,2.293,269,2.293,275,1.582,358,2.354,522,3.04,523,2.949,524,3.912,525,2.949,526,4.669,527,3.52,528,2.949,529,2.949,530,3.52,531,3.52,532,3.52,533,3.52]],["title/modules/UserModule.html",[111,1.232,121,1.894]],["body/modules/UserModule.html",[0,0.105,3,0.292,4,0.249,5,0.249,16,0.03,31,0.526,41,0.292,45,0.022,46,0.022,63,0.337,96,1.737,98,0.761,104,0.708,111,2.199,113,1.712,114,2.209,121,3.645,122,2.628,123,2.037,124,2.037,126,1.78,127,2.889,128,2.239,129,2.239,130,1.456,358,2.915,363,2.785,443,4.12,522,3.545,529,3.192,534,3.192,535,3.192,536,3.81,537,3.81,538,3.81,539,3.81]],["title/injectables/UserService.html",[156,0.975,358,1.448]],["body/injectables/UserService.html",[0,0.077,3,0.214,4,0.182,5,0.182,7,0.316,15,0.587,16,0.031,17,1.298,21,0.718,31,0.491,41,0.214,45,0.018,46,0.018,49,3.021,63,0.352,74,3.496,98,0.616,100,1.114,103,1.2,104,0.519,109,1.407,126,1.996,130,1.067,156,1.204,157,1.366,159,2.128,172,1.516,173,1.516,174,1.516,181,2.479,191,1.921,240,1.156,244,1.366,254,2.497,259,1.648,260,1.789,261,1.789,262,1.522,263,1.789,264,1.789,275,1.255,278,1.789,288,2.339,290,2.971,295,1.819,296,2.339,297,1.819,299,1.641,308,2.593,310,1.819,312,1.819,316,2.593,318,2.34,319,1.819,320,1.641,358,1.789,363,2.041,459,2.041,524,3.335,525,3.335,528,2.34,540,2.34,541,3.981,542,2.793,543,2.793,544,3.981,545,2.793,546,3.981,547,2.793,548,2.793,549,2.793,550,2.793,551,2.793,552,2.793,553,2.793,554,2.793,555,2.793,556,2.793]],["title/injectables/ValidationPipe.html",[156,0.975,557,2.356]],["body/injectables/ValidationPipe.html",[0,0.139,3,0.25,4,0.213,5,0.213,7,0.369,15,0.561,16,0.031,17,0.913,21,0.686,26,1.351,31,0.445,37,1.247,41,0.25,45,0.02,46,0.02,63,0.288,98,0.686,100,1.241,103,1.147,104,0.606,109,1.781,156,1.342,157,1.596,165,2.733,172,1.45,173,1.45,174,1.45,181,2.694,191,1.351,214,3.283,225,1.917,247,2.385,254,2.265,262,1.696,278,1.466,299,2.962,320,1.917,459,2.385,472,3.717,557,3.954,558,2.733,559,4.436,560,4.436,561,4.436,562,3.954,563,3.262,564,5.041,565,4.436,566,5.41,567,3.262,568,4.532,569,4.436,570,3.262,571,3.262,572,3.262,573,2.733,574,3.262,575,3.262,576,3.262,577,3.262,578,3.262,579,2.733,580,3.262,581,3.262,582,3.262,583,3.262]],["title/coverage.html",[584,3.216]],["body/coverage.html",[0,0.17,1,1.809,5,0.201,6,2.579,15,0.389,16,0.03,45,0.019,46,0.019,47,1.809,48,2.579,58,1.809,59,2.579,74,1.809,75,2.579,94,1.959,95,2.005,97,2.579,105,1.646,126,1.006,132,1.383,134,1.006,137,1.275,156,1.734,158,2.579,163,2.251,164,2.579,191,1.275,195,2.579,249,2.005,250,2.579,271,1.646,282,1.177,287,2.579,322,2.579,344,2.005,345,2.579,350,1.646,358,1.383,365,2.579,370,2.005,386,2.005,387,2.005,389,2.579,395,2.579,421,2.005,422,2.579,446,2.579,470,2.579,497,2.579,522,2.005,523,2.579,540,2.579,557,2.251,558,2.579,562,3.117,579,4.804,584,2.251,585,3.079,586,3.079,587,3.079,588,5.543,589,5.543,590,3.079,591,5.279,592,5.279,593,2.579,594,3.079,595,2.579,596,5.279,597,4.263,598,4.263,599,4.263,600,2.579,601,2.579,602,3.079,603,4.263,604,3.079,605,3.079,606,3.079,607,3.079,608,2.579,609,2.579,610,4.263,611,4.263,612,4.263,613,3.079,614,3.079,615,3.079,616,3.079]],["title/dependencies.html",[114,1.742,617,2.691]],["body/dependencies.html",[0,0.142,16,0.031,33,1.23,37,1.555,45,0.023,46,0.023,104,0.755,114,1.828,130,1.555,179,4.295,240,1.684,390,2.974,517,3.408,573,3.408,618,5.893,619,4.068,620,4.068,621,4.068,622,4.068,623,4.068,624,4.068,625,4.068,626,4.068,627,4.068,628,4.068,629,4.068,630,4.068,631,4.068,632,4.068,633,4.068,634,4.068,635,4.068,636,4.068,637,4.068,638,4.068,639,4.068,640,4.068,641,4.068,642,4.068,643,4.068,644,4.068,645,4.068,646,4.068,647,4.068]],["title/miscellaneous/functions.html",[648,1.753,649,3.248]],["body/miscellaneous/functions.html",[7,0.513,15,0.693,16,0.028,45,0.025,46,0.025,63,0.4,98,0.7,99,2.66,103,1.171,172,1.48,173,1.48,174,1.48,259,1.874,262,1.731,460,3.31,562,3.31,600,3.793,601,4.589,608,3.793,609,5.126,648,2.949,649,3.793,650,4.528,651,4.528,652,4.528,653,5.888,654,5.477]],["title/index.html",[7,0.305,655,2.691,656,2.691]],["body/index.html",[4,0.242,16,0.03,45,0.022,46,0.022,63,0.328,99,2.183,290,2.183,482,3.114,584,2.717,657,3.716,658,3.716,659,4.838,660,3.716,661,3.716,662,3.716,663,3.716,664,3.716,665,3.716,666,5.379,667,3.716,668,3.716,669,3.716,670,6.168,671,3.716,672,3.716,673,6.057,674,3.716,675,3.716,676,4.838,677,3.716,678,3.716,679,3.716,680,3.716,681,4.838,682,4.838,683,3.716,684,3.716,685,3.716,686,4.838,687,4.838,688,3.716,689,3.716,690,3.716,691,3.716,692,3.716,693,3.114,694,3.716,695,3.716,696,3.716,697,3.716,698,3.716,699,3.716,700,3.716,701,3.716,702,3.716,703,3.716,704,3.716,705,3.716,706,3.716,707,3.716,708,3.716,709,3.716,710,3.716]],["title/modules.html",[113,1.977]],["body/modules.html",[16,0.025,45,0.025,46,0.025,112,3.04,113,2.098,118,2.743,119,2.743,120,2.743,121,2.743,693,5.293,711,6.318,712,6.318,713,6.318]],["title/overview.html",[714,3.686]],["body/overview.html",[2,1.251,16,0.03,45,0.021,46,0.021,96,1.251,105,2.808,112,4.179,113,1.591,114,2.106,115,2.967,116,2.967,117,2.967,118,3.582,119,3.68,120,3.511,121,3.511,122,2.505,123,1.893,124,1.893,157,1.732,271,2.808,280,2.967,281,2.967,282,2.394,350,2.808,356,2.967,357,2.967,358,2.781,386,2.306,438,2.967,439,2.967,521,2.967,534,2.967,535,2.967,714,2.967,715,4.687,716,3.541,717,3.541]],["title/miscellaneous/variables.html",[648,1.753,718,3.248]],["body/miscellaneous/variables.html",[7,0.515,8,1.737,15,0.575,16,0.03,45,0.025,46,0.025,63,0.401,99,2.67,242,2.96,387,2.96,390,3.322,392,3.808,393,3.808,394,3.808,568,3.808,593,3.808,595,4.599,648,2.96,718,3.808,719,4.545,720,4.545,721,5.898,722,5.489,723,4.545,724,4.545,725,4.545]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":579,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["0.1.13",{"_index":640,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":629,"title":{},"body":{"dependencies.html":{}}}],["0.2.41",{"_index":647,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":628,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":602,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":590,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":614,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":610,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":613,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":717,"title":{},"body":{"overview.html":{}}}],["1.0",{"_index":724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1.4.6",{"_index":632,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":597,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":589,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":592,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":612,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":599,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":521,"title":{},"body":{"classes/User.html":{},"overview.html":{}}}],["100",{"_index":596,"title":{},"body":{"coverage.html":{}}}],["11/11",{"_index":605,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":604,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":607,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":20,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{}}}],["16)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":82,"title":{},"body":{"classes/AddUserDto.html":{}}}],["17/17",{"_index":606,"title":{},"body":{"coverage.html":{}}}],["2.3.3",{"_index":634,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":598,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":611,"title":{},"body":{"coverage.html":{}}}],["3.0.2",{"_index":642,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":627,"title":{},"body":{"dependencies.html":{}}}],["33",{"_index":591,"title":{},"body":{"coverage.html":{}}}],["3306",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["4.0.0",{"_index":637,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":646,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":715,"title":{},"body":{"overview.html":{}}}],["5.0.1",{"_index":624,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":622,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":588,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":716,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":644,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":618,"title":{},"body":{"dependencies.html":{}}}],["8.0.3",{"_index":623,"title":{},"body":{"dependencies.html":{}}}],["92",{"_index":603,"title":{},"body":{"coverage.html":{}}}],["accepts",{"_index":259,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["added",{"_index":263,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["addmoviedetails",{"_index":253,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["addmoviedetails(@body",{"_index":276,"title":{},"body":{"controllers/MoviesController.html":{}}}],["addmoviedetails(addmoviesdto",{"_index":256,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["addmovies.dto",{"_index":270,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["addmoviesdto",{"_index":1,"title":{"classes/AddMoviesDto.html":{}},"body":{"classes/AddMoviesDto.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"coverage.html":{}}}],["addmoviesdto.location",{"_index":302,"title":{},"body":{"injectables/MoviesService.html":{}}}],["addmoviesdto.theatername",{"_index":303,"title":{},"body":{"injectables/MoviesService.html":{}}}],["addpaymentdetails",{"_index":346,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["addpaymentdetails(@body",{"_index":354,"title":{},"body":{"controllers/PaymentController.html":{}}}],["addpaymentdetails(addpaymentdto",{"_index":347,"title":{},"body":{"controllers/PaymentController.html":{},"injectables/PaymentService.html":{}}}],["addpaymentdto",{"_index":47,"title":{"classes/AddPaymentDto.html":{}},"body":{"classes/AddPaymentDto.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"coverage.html":{}}}],["addpaymentdto.emailid",{"_index":375,"title":{},"body":{"injectables/PaymentService.html":{}}}],["addpaymentdto.location",{"_index":376,"title":{},"body":{"injectables/PaymentService.html":{}}}],["addpaymentdto.theatername",{"_index":377,"title":{},"body":{"injectables/PaymentService.html":{}}}],["addtheater",{"_index":204,"title":{},"body":{"classes/Movies.html":{}}}],["addtheater(m",{"_index":418,"title":{},"body":{"classes/Theater.html":{}}}],["addtheater(t",{"_index":235,"title":{},"body":{"classes/Movies.html":{}}}],["addtheater.dto",{"_index":431,"title":{},"body":{"controllers/TheaterController.html":{},"injectables/TheaterService.html":{}}}],["addtheaterdetails",{"_index":423,"title":{},"body":{"controllers/TheaterController.html":{},"injectables/TheaterService.html":{}}}],["addtheaterdetails(@body",{"_index":435,"title":{},"body":{"controllers/TheaterController.html":{}}}],["addtheaterdetails(addtheaterdto",{"_index":425,"title":{},"body":{"controllers/TheaterController.html":{},"injectables/TheaterService.html":{}}}],["addtheaterdto",{"_index":58,"title":{"classes/AddTheaterDto.html":{}},"body":{"classes/AddTheaterDto.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"coverage.html":{}}}],["adduser.dto",{"_index":528,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduserdetails",{"_index":524,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduserdetails(@body",{"_index":532,"title":{},"body":{"controllers/UserController.html":{}}}],["adduserdetails(adduserdto",{"_index":525,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["adduserdto",{"_index":74,"title":{"classes/AddUserDto.html":{}},"body":{"classes/AddUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["al",{"_index":454,"title":{},"body":{"injectables/TheaterService.html":{}}}],["amazing",{"_index":694,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":32,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["apiproperty()@isemail",{"_index":79,"title":{},"body":{"classes/AddUserDto.html":{}}}],["apiproperty()@isnumber",{"_index":27,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{}}}],["apiproperty()@isstring",{"_index":23,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{}}}],["apiproperty()@isstring()@length(3",{"_index":19,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{}}}],["apiproperty()@isstring()@length(8",{"_index":81,"title":{},"body":{"classes/AddUserDto.html":{}}}],["apitags",{"_index":269,"title":{},"body":{"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{}}}],["apitags('movies",{"_index":274,"title":{},"body":{"controllers/MoviesController.html":{}}}],["apitags('payment",{"_index":353,"title":{},"body":{"controllers/PaymentController.html":{}}}],["apitags('theater",{"_index":434,"title":{},"body":{"controllers/TheaterController.html":{}}}],["apitags('user",{"_index":530,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":99,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.controller",{"_index":131,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":106,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":95,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":665,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":112,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":105,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":566,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":170,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["array",{"_index":247,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{},"injectables/ValidationPipe.html":{}}}],["async",{"_index":254,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["authenticationexception",{"_index":491,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["author",{"_index":703,"title":{},"body":{"index.html":{}}}],["auto",{"_index":212,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["await",{"_index":278,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["backers",{"_index":695,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":570,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception('validation",{"_index":580,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["balconyprice",{"_index":60,"title":{},"body":{"classes/AddTheaterDto.html":{},"classes/Theater.html":{}}}],["bcrypt",{"_index":517,"title":{},"body":{"classes/User.html":{},"dependencies.html":{}}}],["bcrypt.hash(this.password",{"_index":520,"title":{},"body":{"classes/User.html":{}}}],["bcrypted",{"_index":514,"title":{},"body":{"classes/User.html":{}}}],["beforeinsert",{"_index":512,"title":{},"body":{"classes/User.html":{}}}],["benchprice",{"_index":61,"title":{},"body":{"classes/AddTheaterDto.html":{},"classes/Theater.html":{}}}],["between",{"_index":231,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["body",{"_index":267,"title":{},"body":{"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":214,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{},"classes/User.html":{},"injectables/ValidationPipe.html":{}}}],["bootstrap",{"_index":609,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boxprice",{"_index":62,"title":{},"body":{"classes/AddTheaterDto.html":{},"classes/Payment.html":{},"classes/Theater.html":{}}}],["browse",{"_index":713,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":711,"title":{},"body":{"modules.html":{}}}],["building",{"_index":660,"title":{},"body":{"index.html":{}}}],["cache",{"_index":625,"title":{},"body":{"dependencies.html":{}}}],["cascade",{"_index":226,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["catch",{"_index":167,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(exception",{"_index":168,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["catch(httpexception",{"_index":180,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["chelli1",{"_index":150,"title":{},"body":{"modules/AppModule.html":{}}}],["class",{"_index":0,"title":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{}},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":116,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_moviesmodule",{"_index":280,"title":{},"body":{"modules/MoviesModule.html":{},"overview.html":{}}}],["cluster_moviesmodule_providers",{"_index":281,"title":{},"body":{"modules/MoviesModule.html":{},"overview.html":{}}}],["cluster_paymentmodule",{"_index":356,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_paymentmodule_providers",{"_index":357,"title":{},"body":{"modules/PaymentModule.html":{},"overview.html":{}}}],["cluster_theatermodule",{"_index":438,"title":{},"body":{"modules/TheaterModule.html":{},"overview.html":{}}}],["cluster_theatermodule_exports",{"_index":439,"title":{},"body":{"modules/TheaterModule.html":{},"overview.html":{}}}],["cluster_theatermodule_providers",{"_index":440,"title":{},"body":{"modules/TheaterModule.html":{}}}],["cluster_usermodule",{"_index":534,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":535,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_providers",{"_index":536,"title":{},"body":{"modules/UserModule.html":{}}}],["column",{"_index":208,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["column()@apiproperty",{"_index":215,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["column()@isemail()@apiproperty",{"_index":219,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["column()@isnumber()@apiproperty",{"_index":221,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["column()@isstring",{"_index":205,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["column()@isstring()@apiproperty",{"_index":217,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["column({default",{"_index":232,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["common/filter/customexception.exception",{"_index":371,"title":{},"body":{"injectables/PaymentService.html":{}}}],["confifg",{"_index":725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":391,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["console.log(\"enterd",{"_index":518,"title":{},"body":{"classes/User.html":{}}}],["console.log('theater",{"_index":315,"title":{},"body":{"injectables/MoviesService.html":{}}}],["const",{"_index":181,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":288,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"injectables/UserService.html":{}}}],["constructor(movierepository",{"_index":289,"title":{},"body":{"injectables/MoviesService.html":{}}}],["constructor(paymentrepository",{"_index":366,"title":{},"body":{"injectables/PaymentService.html":{}}}],["constructor(private",{"_index":107,"title":{},"body":{"controllers/AppController.html":{},"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{}}}],["constructor(thaterrepository",{"_index":449,"title":{},"body":{"injectables/TheaterService.html":{}}}],["constructor(userrepository",{"_index":542,"title":{},"body":{"injectables/UserService.html":{}}}],["continue",{"_index":484,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["controller",{"_index":94,"title":{"controllers/AppController.html":{},"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('movies",{"_index":273,"title":{},"body":{"controllers/MoviesController.html":{}}}],["controller('payment",{"_index":352,"title":{},"body":{"controllers/PaymentController.html":{}}}],["controller('theater",{"_index":433,"title":{},"body":{"controllers/TheaterController.html":{}}}],["controller('user",{"_index":531,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":96,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["cookie",{"_index":630,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":584,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createdat",{"_index":197,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["createdocument",{"_index":601,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["createdocument(app",{"_index":652,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createtime",{"_index":198,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["credentials",{"_index":487,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["ctx",{"_index":182,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":185,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":184,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["data",{"_index":460,"title":{},"body":{"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"miscellaneous/functions.html":{}}}],["database",{"_index":151,"title":{},"body":{"modules/AppModule.html":{}}}],["datanotadded",{"_index":296,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"injectables/UserService.html":{}}}],["datanotfoundexception",{"_index":489,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["date",{"_index":308,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["date().toisostring",{"_index":192,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["date.tolocaledatestring",{"_index":310,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["date.tolocaletimestring",{"_index":312,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["decorators",{"_index":18,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"classes/User.html":{},"controllers/UserController.html":{}}}],["default",{"_index":242,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":21,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["dependencies",{"_index":114,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":63,"title":{},"body":{"classes/AddTheaterDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["development",{"_index":672,"title":{},"body":{"index.html":{}}}],["disable",{"_index":39,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["documentation",{"_index":585,"title":{},"body":{"coverage.html":{}}}],["done",{"_index":383,"title":{},"body":{"injectables/PaymentService.html":{}}}],["e2e",{"_index":683,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":661,"title":{},"body":{"index.html":{}}}],["emailid",{"_index":49,"title":{},"body":{"classes/AddPaymentDto.html":{},"classes/AddUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["emailid:string",{"_index":57,"title":{},"body":{"classes/AddPaymentDto.html":{}}}],["entities",{"_index":153,"title":{},"body":{"modules/AppModule.html":{}}}],["entity",{"_index":196,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["entity/movies.entity",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{}}}],["entity/payment.entity",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"injectables/PaymentService.html":{}}}],["entity/theater.entity",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{}}}],["entity/user.entity",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":493,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["errors",{"_index":576,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":578,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["eslint",{"_index":38,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["exception",{"_index":175,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/UnauthorizedException.html":{}}}],["exception.getstatus",{"_index":187,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["exceptionfilter",{"_index":166,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["export",{"_index":41,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":443,"title":{},"body":{"modules/TheaterModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":179,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"dependencies.html":{}}}],["extends",{"_index":473,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["failed",{"_index":581,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["false",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["founc",{"_index":461,"title":{},"body":{"injectables/TheaterService.html":{}}}],["found",{"_index":481,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["framework",{"_index":659,"title":{},"body":{"index.html":{}}}],["function",{"_index":562,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":649,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generates",{"_index":207,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["get('/getallmovies",{"_index":265,"title":{},"body":{"controllers/MoviesController.html":{}}}],["get('/getalltheaters",{"_index":428,"title":{},"body":{"controllers/TheaterController.html":{}}}],["getallmovies",{"_index":255,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{}}}],["getalltheater",{"_index":447,"title":{},"body":{"injectables/TheaterService.html":{}}}],["getalltheaters",{"_index":424,"title":{},"body":{"controllers/TheaterController.html":{}}}],["gethello",{"_index":101,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["gettheaterbyname",{"_index":448,"title":{},"body":{"injectables/TheaterService.html":{}}}],["gettheaterbyname(location",{"_index":455,"title":{},"body":{"injectables/TheaterService.html":{}}}],["getting",{"_index":655,"title":{"index.html":{}},"body":{}}],["getuserbyemail",{"_index":541,"title":{},"body":{"injectables/UserService.html":{}}}],["getuserbyemail(emailid",{"_index":546,"title":{},"body":{"injectables/UserService.html":{}}}],["grow",{"_index":690,"title":{},"body":{"index.html":{}}}],["hashed",{"_index":516,"title":{},"body":{"classes/User.html":{}}}],["hello",{"_index":161,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":700,"title":{},"body":{"index.html":{}}}],["host",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":183,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["httpexception",{"_index":169,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/UnauthorizedException.html":{}}}],["httpexceptionfilter",{"_index":163,"title":{"classes/HttpExceptionFilter.html":{}},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["https://nestjs.com",{"_index":707,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":475,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["httpstatus.bad_request",{"_index":496,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["httpstatus.not_acceptable",{"_index":488,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["httpstatus.not_found",{"_index":485,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["httpstatus.unauthorized",{"_index":477,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["id",{"_index":199,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["identifier",{"_index":586,"title":{},"body":{"coverage.html":{}}}],["ie",{"_index":515,"title":{},"body":{"classes/User.html":{}}}],["ignore",{"_index":478,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["implements",{"_index":165,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":31,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{}}}],["incremental",{"_index":213,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":653,"title":{},"body":{"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["injectable",{"_index":156,"title":{"injectables/AppService.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AppService.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":157,"title":{},"body":{"injectables/AppService.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectrepository",{"_index":295,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["injectrepository(movies",{"_index":298,"title":{},"body":{"injectables/MoviesService.html":{}}}],["injectrepository(payment",{"_index":372,"title":{},"body":{"injectables/PaymentService.html":{}}}],["injectrepository(theater",{"_index":462,"title":{},"body":{"injectables/TheaterService.html":{}}}],["injectrepository(user",{"_index":548,"title":{},"body":{"injectables/UserService.html":{}}}],["input",{"_index":458,"title":{},"body":{"injectables/TheaterService.html":{}}}],["installation",{"_index":669,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":671,"title":{},"body":{"index.html":{}}}],["interface",{"_index":386,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":388,"title":{},"body":{"interfaces/SwaggerConfig.html":{}}}],["isactive",{"_index":200,"title":{},"body":{"classes/Movies.html":{},"injectables/MoviesService.html":{},"classes/Theater.html":{},"injectables/TheaterService.html":{},"classes/User.html":{}}}],["isemail",{"_index":90,"title":{},"body":{"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["isnumber",{"_index":35,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["isstring",{"_index":34,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["join",{"_index":697,"title":{},"body":{"index.html":{}}}],["joincolumn",{"_index":340,"title":{},"body":{"classes/Payment.html":{}}}],["jointable",{"_index":239,"title":{},"body":{"classes/Movies.html":{}}}],["jwt",{"_index":636,"title":{},"body":{"dependencies.html":{}}}],["kamil",{"_index":704,"title":{},"body":{"index.html":{}}}],["language",{"_index":9,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/Movies.html":{}}}],["length",{"_index":36,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{}}}],["length(3",{"_index":73,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["length(3,16",{"_index":42,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{}}}],["length(8,16",{"_index":92,"title":{},"body":{"classes/AddUserDto.html":{}}}],["license",{"_index":710,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":687,"title":{},"body":{"index.html":{}}}],["localhost",{"_index":146,"title":{},"body":{"modules/AppModule.html":{}}}],["location",{"_index":10,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"injectables/TheaterService.html":{}}}],["location:string",{"_index":44,"title":{},"body":{"classes/AddMoviesDto.html":{}}}],["log",{"_index":483,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["manager",{"_index":626,"title":{},"body":{"dependencies.html":{}}}],["many",{"_index":230,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["manytomany",{"_index":238,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{}}}],["manytomany(undefined",{"_index":224,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{}}}],["manytoone",{"_index":339,"title":{},"body":{"classes/Payment.html":{}}}],["manytoone(undefined",{"_index":331,"title":{},"body":{"classes/Payment.html":{}}}],["matches",{"_index":91,"title":{},"body":{"classes/AddUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":93,"title":{},"body":{"classes/AddUserDto.html":{}}}],["matching",{"_index":46,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":85,"title":{},"body":{"classes/AddUserDto.html":{}}}],["metadata",{"_index":639,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":564,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["methods",{"_index":100,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["mgmnt",{"_index":721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":648,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":686,"title":{},"body":{"index.html":{}}}],["mny",{"_index":229,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{}}}],["mode",{"_index":676,"title":{},"body":{"index.html":{}}}],["module",{"_index":111,"title":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":113,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/movies/movies.module",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/payment/payment.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/theater/theater.module",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":699,"title":{},"body":{"index.html":{}}}],["movie",{"_index":252,"title":{},"body":{"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{}}}],["movie.createdat",{"_index":309,"title":{},"body":{"injectables/MoviesService.html":{}}}],["movie.createtime",{"_index":311,"title":{},"body":{"injectables/MoviesService.html":{}}}],["movie.isactive",{"_index":305,"title":{},"body":{"injectables/MoviesService.html":{}}}],["movie.theaters",{"_index":313,"title":{},"body":{"injectables/MoviesService.html":{}}}],["movie.updatedat",{"_index":306,"title":{},"body":{"injectables/MoviesService.html":{}}}],["movie.updatedtime",{"_index":307,"title":{},"body":{"injectables/MoviesService.html":{}}}],["moviebookingapp",{"_index":152,"title":{},"body":{"modules/AppModule.html":{}}}],["moviename",{"_index":11,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{}}}],["movierepository",{"_index":292,"title":{},"body":{"injectables/MoviesService.html":{}}}],["movies",{"_index":132,"title":{"classes/Movies.html":{}},"body":{"modules/AppModule.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Theater.html":{},"coverage.html":{}}}],["movies.controller",{"_index":284,"title":{},"body":{"modules/MoviesModule.html":{}}}],["movies.entity",{"_index":415,"title":{},"body":{"classes/Theater.html":{}}}],["movies.service",{"_index":272,"title":{},"body":{"controllers/MoviesController.html":{},"modules/MoviesModule.html":{}}}],["movies.theaters",{"_index":417,"title":{},"body":{"classes/Theater.html":{}}}],["moviescontroller",{"_index":249,"title":{"controllers/MoviesController.html":{}},"body":{"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"coverage.html":{}}}],["moviesmodule",{"_index":118,"title":{"modules/MoviesModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules.html":{},"overview.html":{}}}],["moviesservice",{"_index":271,"title":{"injectables/MoviesService.html":{}},"body":{"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"coverage.html":{},"overview.html":{}}}],["mysql",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["mysql2",{"_index":633,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":705,"title":{},"body":{"index.html":{}}}],["name",{"_index":173,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["nest",{"_index":666,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":709,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":104,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":619,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":620,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":621,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":33,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"classes/User.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["new",{"_index":191,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"classes/Theater.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["node.js",{"_index":658,"title":{},"body":{"index.html":{}}}],["noofscreens",{"_index":64,"title":{},"body":{"classes/AddTheaterDto.html":{},"classes/Theater.html":{}}}],["npm",{"_index":670,"title":{},"body":{"index.html":{}}}],["null",{"_index":246,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{}}}],["number",{"_index":26,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{},"injectables/ValidationPipe.html":{}}}],["object",{"_index":262,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["object.assign(movie",{"_index":304,"title":{},"body":{"injectables/MoviesService.html":{}}}],["object.assign(payment",{"_index":384,"title":{},"body":{"injectables/PaymentService.html":{}}}],["object.assign(theater",{"_index":314,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/TheaterService.html":{}}}],["object.assign(user",{"_index":549,"title":{},"body":{"injectables/UserService.html":{}}}],["objects",{"_index":260,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ondelete",{"_index":332,"title":{},"body":{"classes/Payment.html":{}}}],["one",{"_index":337,"title":{},"body":{"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["onetomany",{"_index":414,"title":{},"body":{"classes/Theater.html":{},"classes/User.html":{}}}],["onetomany(undefined",{"_index":407,"title":{},"body":{"classes/Theater.html":{},"classes/User.html":{}}}],["onupdate",{"_index":334,"title":{},"body":{"classes/Payment.html":{}}}],["open",{"_index":688,"title":{},"body":{"index.html":{}}}],["openapiobject",{"_index":654,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opertaions",{"_index":723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["optional",{"_index":174,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":714,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":617,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":275,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["parameters",{"_index":172,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":631,"title":{},"body":{"dependencies.html":{}}}],["passport",{"_index":635,"title":{},"body":{"dependencies.html":{}}}],["password",{"_index":76,"title":{},"body":{"classes/AddUserDto.html":{},"modules/AppModule.html":{},"classes/User.html":{}}}],["path",{"_index":193,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["payment",{"_index":137,"title":{"classes/Payment.html":{}},"body":{"modules/AppModule.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Theater.html":{},"classes/User.html":{},"coverage.html":{}}}],["payment.controller",{"_index":360,"title":{},"body":{"modules/PaymentModule.html":{}}}],["payment.createdat",{"_index":378,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.createtime",{"_index":379,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.entity",{"_index":416,"title":{},"body":{"classes/Theater.html":{},"classes/User.html":{}}}],["payment.service",{"_index":351,"title":{},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{}}}],["payment.status",{"_index":382,"title":{},"body":{"injectables/PaymentService.html":{}}}],["payment.theater",{"_index":380,"title":{},"body":{"injectables/PaymentService.html":{},"classes/Theater.html":{}}}],["payment.user",{"_index":381,"title":{},"body":{"injectables/PaymentService.html":{},"classes/User.html":{}}}],["paymentcontroller",{"_index":344,"title":{"controllers/PaymentController.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"coverage.html":{}}}],["paymentmodule",{"_index":119,"title":{"modules/PaymentModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PaymentModule.html":{},"modules.html":{},"overview.html":{}}}],["paymentrepository",{"_index":368,"title":{},"body":{"injectables/PaymentService.html":{}}}],["paymentservice",{"_index":350,"title":{"injectables/PaymentService.html":{}},"body":{"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"coverage.html":{},"overview.html":{}}}],["phonenum",{"_index":77,"title":{},"body":{"classes/AddUserDto.html":{},"classes/User.html":{}}}],["pipetransform",{"_index":569,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":572,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":575,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["please",{"_index":482,"title":{},"body":{"classes/UnauthorizedException.html":{},"index.html":{}}}],["point",{"_index":472,"title":{},"body":{"classes/UnauthorizedException.html":{},"injectables/ValidationPipe.html":{}}}],["port",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["post",{"_index":268,"title":{},"body":{"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{}}}],["post('/addmovie",{"_index":257,"title":{},"body":{"controllers/MoviesController.html":{}}}],["post('/addpayment",{"_index":348,"title":{},"body":{"controllers/PaymentController.html":{}}}],["post('/addtheater",{"_index":426,"title":{},"body":{"controllers/TheaterController.html":{}}}],["post('/adduser",{"_index":526,"title":{},"body":{"controllers/UserController.html":{}}}],["prefix",{"_index":251,"title":{},"body":{"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{}}}],["prettier/prettier",{"_index":40,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["price",{"_index":50,"title":{},"body":{"classes/AddPaymentDto.html":{},"classes/Payment.html":{}}}],["primarygeneratedcolumn",{"_index":210,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["private",{"_index":299,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["production",{"_index":678,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":657,"title":{},"body":{"index.html":{}}}],["project",{"_index":689,"title":{},"body":{"index.html":{}}}],["promise",{"_index":261,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{}}}],["rating",{"_index":12,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddTheaterDto.html":{},"classes/Movies.html":{},"classes/Theater.html":{}}}],["read",{"_index":698,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":108,"title":{},"body":{"controllers/AppController.html":{},"controllers/MoviesController.html":{},"controllers/PaymentController.html":{},"controllers/TheaterController.html":{},"controllers/UserController.html":{}}}],["recives",{"_index":457,"title":{},"body":{"injectables/TheaterService.html":{}}}],["reflect",{"_index":638,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":318,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/UserService.html":{}}}],["relationship",{"_index":409,"title":{},"body":{"classes/Theater.html":{},"classes/User.html":{}}}],["repository",{"_index":290,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["request",{"_index":177,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["request.url",{"_index":194,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["reset",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":178,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["response.status(status).json",{"_index":188,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["restrict",{"_index":333,"title":{},"body":{"classes/Payment.html":{}}}],["restrict'})@joincolumn",{"_index":335,"title":{},"body":{"classes/Payment.html":{}}}],["result",{"_index":316,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["results",{"_index":45,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":109,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":103,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":641,"title":{},"body":{"dependencies.html":{}}}],["root",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":673,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":643,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":662,"title":{},"body":{"index.html":{}}}],["screenno",{"_index":13,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{}}}],["server",{"_index":663,"title":{},"body":{"index.html":{}}}],["service",{"_index":159,"title":{},"body":{"injectables/AppService.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["side",{"_index":664,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"index.html":{}}}],["sponsors",{"_index":692,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":650,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../swagger.config.ts",{"_index":719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":651,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":97,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:12",{"_index":102,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":158,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:8",{"_index":160,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/filter/customexception.exception",{"_index":297,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["src/common/filter/customexception.exception.ts",{"_index":470,"title":{},"body":{"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["src/common/filter/customexception.exception.ts:8",{"_index":474,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["src/common/filter/httpexceptionfilter.exception.ts",{"_index":164,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filter/httpexceptionfilter.exception.ts:13",{"_index":171,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["src/common/pipes/validationpipe.ts",{"_index":558,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validationpipe.ts:13",{"_index":567,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validationpipe.ts:25",{"_index":563,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/config/swagger/swagger.config.ts",{"_index":593,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/swagger/swagger.interface.ts",{"_index":389,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{}}}],["src/config/swagger/swagger.ts",{"_index":600,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/entity/movies.entity.ts",{"_index":195,"title":{},"body":{"classes/Movies.html":{},"coverage.html":{}}}],["src/entity/movies.entity.ts:20",{"_index":211,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:28",{"_index":218,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:36",{"_index":220,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:44",{"_index":223,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:53",{"_index":222,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:60",{"_index":216,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:67",{"_index":233,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:74",{"_index":206,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:81",{"_index":234,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:88",{"_index":209,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:97",{"_index":228,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/movies.entity.ts:99",{"_index":236,"title":{},"body":{"classes/Movies.html":{}}}],["src/entity/payment.entity",{"_index":361,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/entity/payment.entity.ts",{"_index":322,"title":{},"body":{"classes/Payment.html":{},"coverage.html":{}}}],["src/entity/payment.entity.ts:100",{"_index":336,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:21",{"_index":325,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:29",{"_index":326,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:37",{"_index":327,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:46",{"_index":328,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:54",{"_index":329,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:62",{"_index":330,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:69",{"_index":323,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:76",{"_index":324,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/payment.entity.ts:88",{"_index":338,"title":{},"body":{"classes/Payment.html":{}}}],["src/entity/theater.entity.ts",{"_index":395,"title":{},"body":{"classes/Theater.html":{},"coverage.html":{}}}],["src/entity/theater.entity.ts:100",{"_index":412,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:107",{"_index":399,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:114",{"_index":413,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:121",{"_index":400,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:129",{"_index":405,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:137",{"_index":408,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:21",{"_index":402,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:29",{"_index":411,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:37",{"_index":404,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:45",{"_index":410,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:53",{"_index":406,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:61",{"_index":401,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:69",{"_index":398,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:77",{"_index":396,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:85",{"_index":397,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/theater.entity.ts:93",{"_index":403,"title":{},"body":{"classes/Theater.html":{}}}],["src/entity/user.entity",{"_index":363,"title":{},"body":{"modules/PaymentModule.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["src/entity/user.entity.ts",{"_index":497,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/entity/user.entity.ts:108",{"_index":507,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:21",{"_index":503,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:29",{"_index":511,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:37",{"_index":502,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:45",{"_index":505,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:54",{"_index":508,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:61",{"_index":504,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:68",{"_index":509,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:75",{"_index":500,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:82",{"_index":510,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:89",{"_index":501,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:91",{"_index":506,"title":{},"body":{"classes/User.html":{}}}],["src/entity/user.entity.ts:97",{"_index":513,"title":{},"body":{"classes/User.html":{}}}],["src/main.ts",{"_index":608,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/movies/addmovies.dto.ts",{"_index":6,"title":{},"body":{"classes/AddMoviesDto.html":{},"coverage.html":{}}}],["src/modules/movies/addmovies.dto.ts:10",{"_index":28,"title":{},"body":{"classes/AddMoviesDto.html":{}}}],["src/modules/movies/addmovies.dto.ts:11",{"_index":30,"title":{},"body":{"classes/AddMoviesDto.html":{}}}],["src/modules/movies/addmovies.dto.ts:12",{"_index":24,"title":{},"body":{"classes/AddMoviesDto.html":{}}}],["src/modules/movies/addmovies.dto.ts:7",{"_index":22,"title":{},"body":{"classes/AddMoviesDto.html":{}}}],["src/modules/movies/addmovies.dto.ts:8",{"_index":25,"title":{},"body":{"classes/AddMoviesDto.html":{}}}],["src/modules/movies/addmovies.dto.ts:9",{"_index":29,"title":{},"body":{"classes/AddMoviesDto.html":{}}}],["src/modules/movies/movies.controller.ts",{"_index":250,"title":{},"body":{"controllers/MoviesController.html":{},"coverage.html":{}}}],["src/modules/movies/movies.controller.ts:20",{"_index":258,"title":{},"body":{"controllers/MoviesController.html":{}}}],["src/modules/movies/movies.controller.ts:29",{"_index":266,"title":{},"body":{"controllers/MoviesController.html":{}}}],["src/modules/movies/movies.module.ts",{"_index":283,"title":{},"body":{"modules/MoviesModule.html":{}}}],["src/modules/movies/movies.service.ts",{"_index":287,"title":{},"body":{"injectables/MoviesService.html":{},"coverage.html":{}}}],["src/modules/movies/movies.service.ts:14",{"_index":291,"title":{},"body":{"injectables/MoviesService.html":{}}}],["src/modules/movies/movies.service.ts:26",{"_index":293,"title":{},"body":{"injectables/MoviesService.html":{}}}],["src/modules/movies/movies.service.ts:56",{"_index":294,"title":{},"body":{"injectables/MoviesService.html":{}}}],["src/modules/payment/addpaymentdto.ts",{"_index":48,"title":{},"body":{"classes/AddPaymentDto.html":{},"coverage.html":{}}}],["src/modules/payment/addpaymentdto.ts:10",{"_index":55,"title":{},"body":{"classes/AddPaymentDto.html":{}}}],["src/modules/payment/addpaymentdto.ts:11",{"_index":56,"title":{},"body":{"classes/AddPaymentDto.html":{}}}],["src/modules/payment/addpaymentdto.ts:12",{"_index":51,"title":{},"body":{"classes/AddPaymentDto.html":{}}}],["src/modules/payment/addpaymentdto.ts:7",{"_index":52,"title":{},"body":{"classes/AddPaymentDto.html":{}}}],["src/modules/payment/addpaymentdto.ts:8",{"_index":53,"title":{},"body":{"classes/AddPaymentDto.html":{}}}],["src/modules/payment/addpaymentdto.ts:9",{"_index":54,"title":{},"body":{"classes/AddPaymentDto.html":{}}}],["src/modules/payment/payment.controller.ts",{"_index":345,"title":{},"body":{"controllers/PaymentController.html":{},"coverage.html":{}}}],["src/modules/payment/payment.controller.ts:20",{"_index":349,"title":{},"body":{"controllers/PaymentController.html":{}}}],["src/modules/payment/payment.module.ts",{"_index":359,"title":{},"body":{"modules/PaymentModule.html":{}}}],["src/modules/payment/payment.service.ts",{"_index":365,"title":{},"body":{"injectables/PaymentService.html":{},"coverage.html":{}}}],["src/modules/payment/payment.service.ts:15",{"_index":367,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/modules/payment/payment.service.ts:28",{"_index":369,"title":{},"body":{"injectables/PaymentService.html":{}}}],["src/modules/theater/addtheater.dto.ts",{"_index":59,"title":{},"body":{"classes/AddTheaterDto.html":{},"coverage.html":{}}}],["src/modules/theater/addtheater.dto.ts:10",{"_index":70,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/addtheater.dto.ts:11",{"_index":68,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/addtheater.dto.ts:12",{"_index":67,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/addtheater.dto.ts:13",{"_index":65,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/addtheater.dto.ts:14",{"_index":66,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/addtheater.dto.ts:7",{"_index":72,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/addtheater.dto.ts:8",{"_index":69,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/addtheater.dto.ts:9",{"_index":71,"title":{},"body":{"classes/AddTheaterDto.html":{}}}],["src/modules/theater/theater.controller.ts",{"_index":422,"title":{},"body":{"controllers/TheaterController.html":{},"coverage.html":{}}}],["src/modules/theater/theater.controller.ts:20",{"_index":427,"title":{},"body":{"controllers/TheaterController.html":{}}}],["src/modules/theater/theater.controller.ts:29",{"_index":429,"title":{},"body":{"controllers/TheaterController.html":{}}}],["src/modules/theater/theater.module.ts",{"_index":441,"title":{},"body":{"modules/TheaterModule.html":{}}}],["src/modules/theater/theater.service.ts",{"_index":446,"title":{},"body":{"injectables/TheaterService.html":{},"coverage.html":{}}}],["src/modules/theater/theater.service.ts:12",{"_index":450,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/modules/theater/theater.service.ts:23",{"_index":452,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/modules/theater/theater.service.ts:46",{"_index":456,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/modules/theater/theater.service.ts:57",{"_index":453,"title":{},"body":{"injectables/TheaterService.html":{}}}],["src/modules/user/adduser.dto.ts",{"_index":75,"title":{},"body":{"classes/AddUserDto.html":{},"coverage.html":{}}}],["src/modules/user/adduser.dto.ts:11",{"_index":87,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/modules/user/adduser.dto.ts:12",{"_index":88,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/modules/user/adduser.dto.ts:7",{"_index":89,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/modules/user/adduser.dto.ts:8",{"_index":80,"title":{},"body":{"classes/AddUserDto.html":{}}}],["src/modules/user/user.controller.ts",{"_index":523,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:20",{"_index":527,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.module.ts",{"_index":537,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.service.ts",{"_index":540,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:12",{"_index":543,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:23",{"_index":545,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:40",{"_index":547,"title":{},"body":{"injectables/UserService.html":{}}}],["staring",{"_index":471,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["start",{"_index":674,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":677,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":679,"title":{},"body":{"index.html":{}}}],["started",{"_index":656,"title":{"index.html":{}},"body":{}}],["starter",{"_index":668,"title":{},"body":{"index.html":{}}}],["starting",{"_index":98,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{}}}],["statements",{"_index":587,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":498,"title":{},"body":{"classes/User.html":{}}}],["status",{"_index":186,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Payment.html":{}}}],["statuscode",{"_index":189,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["stay",{"_index":701,"title":{},"body":{"index.html":{}}}],["string",{"_index":17,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["strongpassword",{"_index":499,"title":{},"body":{"classes/User.html":{}}}],["succefully",{"_index":495,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["successfully",{"_index":264,"title":{},"body":{"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sucessfully",{"_index":319,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{}}}],["super(\"authentication",{"_index":492,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["super(\"data",{"_index":494,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["super(\"invalid",{"_index":476,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["super(\"no",{"_index":490,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["super(\"user",{"_index":480,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["support",{"_index":693,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":712,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":390,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["swagger_config",{"_index":595,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["swaggerconfig",{"_index":387,"title":{"interfaces/SwaggerConfig.html":{}},"body":{"interfaces/SwaggerConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["synchronize",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["t",{"_index":237,"title":{},"body":{"classes/Movies.html":{}}}],["table",{"_index":616,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":615,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":392,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["task",{"_index":722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tasks",{"_index":720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":682,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":685,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":684,"title":{},"body":{"index.html":{}}}],["tests",{"_index":681,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":691,"title":{},"body":{"index.html":{}}}],["thater",{"_index":442,"title":{},"body":{"modules/TheaterModule.html":{}}}],["thaterrepository",{"_index":451,"title":{},"body":{"injectables/TheaterService.html":{}}}],["theater",{"_index":134,"title":{"classes/Theater.html":{}},"body":{"modules/AppModule.html":{},"classes/Movies.html":{},"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"modules/PaymentModule.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"coverage.html":{}}}],["theater.controller",{"_index":444,"title":{},"body":{"modules/TheaterModule.html":{}}}],["theater.createdat",{"_index":466,"title":{},"body":{"injectables/TheaterService.html":{}}}],["theater.createtime",{"_index":467,"title":{},"body":{"injectables/TheaterService.html":{}}}],["theater.entity",{"_index":241,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{}}}],["theater.isactive",{"_index":463,"title":{},"body":{"injectables/TheaterService.html":{}}}],["theater.movies",{"_index":243,"title":{},"body":{"classes/Movies.html":{}}}],["theater.payment",{"_index":343,"title":{},"body":{"classes/Payment.html":{}}}],["theater.service",{"_index":432,"title":{},"body":{"controllers/TheaterController.html":{},"modules/TheaterModule.html":{}}}],["theater.updatedat",{"_index":464,"title":{},"body":{"injectables/TheaterService.html":{}}}],["theater.updatedtime",{"_index":465,"title":{},"body":{"injectables/TheaterService.html":{}}}],["theater/theater.service",{"_index":285,"title":{},"body":{"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{}}}],["theatercontroller",{"_index":421,"title":{"controllers/TheaterController.html":{}},"body":{"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"coverage.html":{}}}],["theatermodule",{"_index":120,"title":{"modules/TheaterModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TheaterModule.html":{},"modules.html":{},"overview.html":{}}}],["theatername",{"_index":14,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/Theater.html":{},"injectables/TheaterService.html":{}}}],["theatername:string",{"_index":43,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{}}}],["theaterresult",{"_index":300,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{}}}],["theaters",{"_index":201,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{}}}],["theaterservice",{"_index":282,"title":{"injectables/TheaterService.html":{}},"body":{"modules/MoviesModule.html":{},"injectables/MoviesService.html":{},"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/TheaterController.html":{},"modules/TheaterModule.html":{},"injectables/TheaterService.html":{},"coverage.html":{},"overview.html":{}}}],["this.appservice.gethello",{"_index":110,"title":{},"body":{"controllers/AppController.html":{}}}],["this.movierepository.find",{"_index":321,"title":{},"body":{"injectables/MoviesService.html":{}}}],["this.movierepository.save(movie",{"_index":317,"title":{},"body":{"injectables/MoviesService.html":{}}}],["this.movies",{"_index":419,"title":{},"body":{"classes/Theater.html":{}}}],["this.movies.push(m",{"_index":420,"title":{},"body":{"classes/Theater.html":{}}}],["this.moviesservice.addmoviedetails(addmoviesdto",{"_index":277,"title":{},"body":{"controllers/MoviesController.html":{}}}],["this.moviesservice.getallmovies",{"_index":279,"title":{},"body":{"controllers/MoviesController.html":{}}}],["this.password",{"_index":519,"title":{},"body":{"classes/User.html":{}}}],["this.paymentrepository.save(payment",{"_index":385,"title":{},"body":{"injectables/PaymentService.html":{}}}],["this.paymentservice.addpaymentdetails(addpaymentdto",{"_index":355,"title":{},"body":{"controllers/PaymentController.html":{}}}],["this.thaterrepository.find",{"_index":469,"title":{},"body":{"injectables/TheaterService.html":{}}}],["this.thaterrepository.save(theater",{"_index":468,"title":{},"body":{"injectables/TheaterService.html":{}}}],["this.theaters",{"_index":245,"title":{},"body":{"classes/Movies.html":{}}}],["this.theaters.push(t",{"_index":248,"title":{},"body":{"classes/Movies.html":{}}}],["this.theaterservice.addtheaterdetails(addtheaterdto",{"_index":436,"title":{},"body":{"controllers/TheaterController.html":{}}}],["this.theaterservice.getalltheater",{"_index":437,"title":{},"body":{"controllers/TheaterController.html":{}}}],["this.theaterservice.gettheaterbyname",{"_index":301,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{}}}],["this.tovalidate(metatype",{"_index":574,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.userrepository.findone",{"_index":556,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.save(user",{"_index":555,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.adduserdetails(adduserdto",{"_index":533,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserbyemail",{"_index":374,"title":{},"body":{"injectables/PaymentService.html":{}}}],["throw",{"_index":320,"title":{},"body":{"injectables/MoviesService.html":{},"injectables/PaymentService.html":{},"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["timestamp",{"_index":190,"title":{},"body":{"classes/HttpExceptionFilter.html":{}}}],["title",{"_index":393,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["touch",{"_index":702,"title":{},"body":{"index.html":{}}}],["tovalidate",{"_index":559,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":561,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":560,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":565,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":573,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["true",{"_index":244,"title":{},"body":{"classes/Movies.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["true})@jointable",{"_index":227,"title":{},"body":{"classes/Movies.html":{}}}],["ttheater",{"_index":430,"title":{},"body":{"controllers/TheaterController.html":{},"injectables/TheaterService.html":{}}}],["twitter",{"_index":708,"title":{},"body":{"index.html":{}}}],["type",{"_index":15,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"modules/AppModule.html":{},"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{},"controllers/MoviesController.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"injectables/PaymentService.html":{},"interfaces/SwaggerConfig.html":{},"classes/Theater.html":{},"controllers/TheaterController.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":240,"title":{},"body":{"classes/Movies.html":{},"injectables/MoviesService.html":{},"classes/Payment.html":{},"injectables/PaymentService.html":{},"classes/Theater.html":{},"injectables/TheaterService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{}}}],["typeormmodule.forfeature([movies",{"_index":286,"title":{},"body":{"modules/MoviesModule.html":{}}}],["typeormmodule.forfeature([payment",{"_index":364,"title":{},"body":{"modules/PaymentModule.html":{}}}],["typeormmodule.forfeature([theater",{"_index":445,"title":{},"body":{"modules/TheaterModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":539,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forroot",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["types",{"_index":582,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":583,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":667,"title":{},"body":{"index.html":{}}}],["ui",{"_index":645,"title":{},"body":{"dependencies.html":{}}}],["unauthorizedexception",{"_index":370,"title":{"classes/UnauthorizedException.html":{}},"body":{"injectables/PaymentService.html":{},"classes/UnauthorizedException.html":{},"coverage.html":{}}}],["undefined",{"_index":225,"title":{},"body":{"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{},"injectables/ValidationPipe.html":{}}}],["unit",{"_index":680,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":459,"title":{},"body":{"injectables/TheaterService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["updatedat",{"_index":202,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["updatedtime",{"_index":203,"title":{},"body":{"classes/Movies.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["user",{"_index":126,"title":{"classes/User.html":{}},"body":{"modules/AppModule.html":{},"classes/Payment.html":{},"controllers/PaymentController.html":{},"modules/PaymentModule.html":{},"classes/Theater.html":{},"classes/UnauthorizedException.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["user.controller",{"_index":538,"title":{},"body":{"modules/UserModule.html":{}}}],["user.createdat",{"_index":553,"title":{},"body":{"injectables/UserService.html":{}}}],["user.createtime",{"_index":554,"title":{},"body":{"injectables/UserService.html":{}}}],["user.entity",{"_index":341,"title":{},"body":{"classes/Payment.html":{}}}],["user.isactive",{"_index":550,"title":{},"body":{"injectables/UserService.html":{}}}],["user.payment",{"_index":342,"title":{},"body":{"classes/Payment.html":{}}}],["user.service",{"_index":529,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user.updatedat",{"_index":551,"title":{},"body":{"injectables/UserService.html":{}}}],["user.updatedtime",{"_index":552,"title":{},"body":{"injectables/UserService.html":{}}}],["user/user.service",{"_index":362,"title":{},"body":{"modules/PaymentModule.html":{},"injectables/PaymentService.html":{}}}],["usercontroller",{"_index":522,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodule",{"_index":121,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":78,"title":{},"body":{"classes/AddUserDto.html":{},"modules/AppModule.html":{},"classes/Theater.html":{},"classes/User.html":{}}}],["usernotfoundexception",{"_index":479,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["userrepository",{"_index":544,"title":{},"body":{"injectables/UserService.html":{}}}],["userresult",{"_index":373,"title":{},"body":{"injectables/PaymentService.html":{}}}],["userservice",{"_index":358,"title":{"injectables/UserService.html":{}},"body":{"modules/PaymentModule.html":{},"injectables/PaymentService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["validate",{"_index":571,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":577,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":557,"title":{"injectables/ValidationPipe.html":{}},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":37,"title":{},"body":{"classes/AddMoviesDto.html":{},"classes/AddPaymentDto.html":{},"classes/AddTheaterDto.html":{},"classes/AddUserDto.html":{},"classes/Movies.html":{},"classes/Payment.html":{},"classes/Theater.html":{},"classes/User.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":568,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":594,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":718,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":394,"title":{},"body":{"interfaces/SwaggerConfig.html":{},"miscellaneous/variables.html":{}}}],["void",{"_index":176,"title":{},"body":{"classes/HttpExceptionFilter.html":{},"classes/Movies.html":{}}}],["watch",{"_index":675,"title":{},"body":{"index.html":{}}}],["weak",{"_index":86,"title":{},"body":{"classes/AddUserDto.html":{}}}],["website",{"_index":706,"title":{},"body":{"index.html":{}}}],["world",{"_index":162,"title":{},"body":{"injectables/AppService.html":{}}}],["wrongcredentialsexception",{"_index":486,"title":{},"body":{"classes/UnauthorizedException.html":{}}}],["you'd",{"_index":696,"title":{},"body":{"index.html":{}}}],["z",{"_index":84,"title":{},"body":{"classes/AddUserDto.html":{}}}],["z])(?=.*[a",{"_index":83,"title":{},"body":{"classes/AddUserDto.html":{}}}],["zoom",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/MoviesModule.html":{},"modules/PaymentModule.html":{},"modules/TheaterModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddMoviesDto.html":{"url":"classes/AddMoviesDto.html","title":"class - AddMoviesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddMoviesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/addMovies.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                language\n                            \n                            \n                                location\n                            \n                            \n                                movieName\n                            \n                            \n                                rating\n                            \n                            \n                                screenNo\n                            \n                            \n                                theaterName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(3, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/addMovies.dto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/addMovies.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(3, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/addMovies.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/addMovies.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/addMovies.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theaterName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/addMovies.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNumber, Length } from \"class-validator\";\n\n/* eslint-disable prettier/prettier */\nexport class AddMoviesDto {\n    @ApiProperty() @IsString() @Length(3,16) language: string;\n    @ApiProperty() @IsString() @Length(3,16) movieName: string;\n    @ApiProperty() @IsNumber() screenNo: number;\n    @ApiProperty() @IsNumber() rating: number;\n    @ApiProperty() @IsString() theaterName:string;\n    @ApiProperty() @IsString() location:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddPaymentDto.html":{"url":"classes/AddPaymentDto.html","title":"class - AddPaymentDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddPaymentDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/payment/addPaymentDto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailId\n                            \n                            \n                                location\n                            \n                            \n                                movieName\n                            \n                            \n                                price\n                            \n                            \n                                screenNo\n                            \n                            \n                                theaterName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/payment/addPaymentDto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(3, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/payment/addPaymentDto.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(3, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/payment/addPaymentDto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/payment/addPaymentDto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/payment/addPaymentDto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theaterName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/payment/addPaymentDto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNumber, Length } from \"class-validator\";\n\n/* eslint-disable prettier/prettier */\nexport class AddPaymentDto {\n    @ApiProperty() @IsString() @Length(3,16) location: string;\n    @ApiProperty() @IsString() @Length(3,16) movieName: string;\n    @ApiProperty() @IsNumber() price: number;\n    @ApiProperty() @IsNumber() screenNo: number;\n    @ApiProperty() @IsString() theaterName:string;\n    @ApiProperty() @IsString() emailId:string;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddTheaterDto.html":{"url":"classes/AddTheaterDto.html","title":"class - AddTheaterDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddTheaterDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/theater/addTheater.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balconyPrice\n                            \n                            \n                                benchPrice\n                            \n                            \n                                boxPrice\n                            \n                            \n                                description\n                            \n                            \n                                location\n                            \n                            \n                                noOfScreens\n                            \n                            \n                                rating\n                            \n                            \n                                theaterName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balconyPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        benchPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boxPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(3, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noOfScreens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theaterName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(3, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/theater/addTheater.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNumber, Length } from \"class-validator\";\n\n/* eslint-disable prettier/prettier */\nexport class AddTheaterDto {\n    @ApiProperty() @IsString() @Length(3, 16) theaterName: string;\n    @ApiProperty() @IsString() @Length(3, 16) location: string;\n    @ApiProperty() @IsNumber() rating: number;\n    @ApiProperty() @IsNumber() noOfScreens: number;\n    @ApiProperty() @IsString() description: string;\n    @ApiProperty() @IsNumber() boxPrice: number;\n    @ApiProperty() @IsNumber() balconyPrice: number;\n    @ApiProperty() @IsNumber() benchPrice: number;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AddUserDto.html":{"url":"classes/AddUserDto.html","title":"class - AddUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/addUser.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                emailId\n                            \n                            \n                                password\n                            \n                            \n                                phoneNum\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/addUser.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(8, 16)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/addUser.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/addUser.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@Length(8, 16)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/addUser.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNumber, Length, IsEmail, Matches } from \"class-validator\";\n\n/* eslint-disable prettier/prettier */\nexport class AddUserDto {\n    @ApiProperty() @IsString() @Length(8,16) userName: string;\n    @ApiProperty() @IsEmail()  emailId: string;\n    @ApiProperty() @IsString() @Length(8,16)  \n    @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password too weak'})\n    password: string;\n    @ApiProperty() @IsNumber() phoneNum: number;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n            \n                Description\n            \n            \n                Starting of app controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n/**\n * Starting of app controller\n */\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nMoviesModule\n\nMoviesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMoviesModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nTheaterModule\n\nTheaterModule\n\nAppModule -->\n\nTheaterModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Starting of user module\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            MoviesModule\n                        \n                        \n                            PaymentModule\n                        \n                        \n                            TheaterModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { Movies } from './entity/movies.entity';\nimport { Theater } from './entity/theater.entity';\nimport { User } from './entity/user.entity';\nimport { Payment } from './entity/payment.entity';\nimport { UserModule } from './modules/user/user.module';\nimport { TheaterModule } from './modules/theater/theater.module';\nimport { MoviesModule } from './modules/movies/movies.module';\nimport { PaymentModule } from './modules/payment/payment.module';\n\n/**\n * Starting of user module\n */\n@Module({\n  imports: [\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: 'localhost',\n      port: 3306,\n      username: 'root',\n      password: 'Chelli1@',\n      database: 'movieBookingApp',\n      entities: [User, Theater, Movies, Payment],\n      synchronize: false,\n    }),\n    UserModule,\n    TheaterModule,\n    MoviesModule,\n    PaymentModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of app service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n/**\n * Starting of app service\n */\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HttpExceptionFilter.html":{"url":"classes/HttpExceptionFilter.html","title":"class - HttpExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HttpExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/HttpExceptionFilter.exception.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        ExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: HttpException, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filter/HttpExceptionFilter.exception.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            HttpException\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n} from '@nestjs/common';\n\nimport { Request, Response } from 'express';\n\n@Catch(HttpException)\nexport class HttpExceptionFilter implements ExceptionFilter {\n  catch(exception: HttpException, host: ArgumentsHost) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const request = ctx.getRequest();\n    const status = exception.getStatus();\n    response.status(status).json({\n      statusCode: status,\n      timestamp: new Date().toISOString(),\n      path: request.url,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Movies.html":{"url":"classes/Movies.html","title":"class - Movies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Movies\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/movies.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                starting of Movies Entity\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                language\n                            \n                            \n                                movieName\n                            \n                            \n                                rating\n                            \n                            \n                                screenNo\n                            \n                            \n                                theaters\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedTime\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTheater\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:74\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:88\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:20\n                        \n                    \n\n            \n                \n                    auto incremental id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:60\n                        \n                    \n\n            \n                \n                    generates isActive column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:28\n                        \n                    \n\n            \n                \n                    generates language column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:36\n                        \n                    \n\n            \n                \n                    generates movieName column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:53\n                        \n                    \n\n            \n                \n                    generates rating column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:44\n                        \n                    \n\n            \n                \n                    generates screenNo column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theaters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theater[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, undefined, {cascade: true})@JoinTable()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:97\n                        \n                    \n\n            \n                \n                    mny to many between movies and theaters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:67\n                        \n                    \n\n            \n                \n                    generates updatedAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/movies.entity.ts:81\n                        \n                    \n\n            \n                \n                    generates updatedTime column\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTheater\n                        \n                    \n                \n            \n            \n                \naddTheater(t: Theater)\n                \n            \n\n\n            \n                \n                    Defined in src/entity/movies.entity.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    t\n                                    \n                                                Theater\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToMany, JoinTable} from \"typeorm\";\nimport { IsEmail, IsNumber, IsString } from \"class-validator\";\nimport { Theater } from './theater.entity';\n\n/* eslint-disable prettier/prettier */\n\n/**\n * starting of Movies Entity\n */\n@Entity()\nexport class Movies {\n\n    /**\n     * auto incremental id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * generates language column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    language: string;\n\n    /**\n    * generates movieName column\n    */\n    @Column()\n    @IsEmail()\n    @ApiProperty()\n    movieName: string;\n\n    /**\n     * generates screenNo column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    screenNo: number;\n\n\n    /**\n     * generates rating column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    rating: number;\n\n    /**\n     * generates isActive column\n     */\n    @Column()\n    @ApiProperty()\n    isActive: boolean;\n\n    /**\n     * generates updatedAt column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedAt: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    @IsString()\n    createdAt: string;\n\n    /**\n     * generates updatedTime column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedTime: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n    @IsString()\n    createTime: string;\n\n    /**\n     * mny to many between movies and theaters\n     */\n    @ManyToMany(() => Theater, theater => theater.movies, {\n        cascade: true\n    })\n    @JoinTable()\n    theaters: Theater[];\n\n    addTheater(t: Theater) {\n        if (this.theaters == null) {\n            this.theaters = new Array();\n        }\n        this.theaters.push(t);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MoviesController.html":{"url":"controllers/MoviesController.html","title":"controller - MoviesController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MoviesController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/movies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                movies\n            \n\n\n            \n                Description\n            \n            \n                Starting of movie service\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addMovieDetails\n                            \n                            \n                                    Async\n                                getAllMovies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addMovieDetails\n                        \n                    \n                \n            \n            \n                \naddMovieDetails(addMoviesDto: AddMoviesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/addMovie')\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addMoviesDto\n                                    \n                                                AddMoviesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of addMoviesDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        movie object , if movie is added Successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllMovies()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAllMovies')\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        all movies objects\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AddMoviesDto } from './addMovies.dto';\nimport { MoviesService } from './movies.service';\n\n/**\n * Starting of movie service\n */\n@Controller('movies')\n@ApiTags('movies')\nexport class MoviesController {\n  constructor(private readonly moviesService: MoviesService) {}\n\n  /**\n   *\n   * @param addMoviesDto accepts objects of addMoviesDto\n   * @returns movie object , if movie is added Successfully\n   */\n  @Post('/addMovie')\n  addMovieDetails(@Body() addMoviesDto: AddMoviesDto): Promise {\n    return this.moviesService.addMovieDetails(addMoviesDto);\n  }\n\n  /**\n   *\n   * @returns all movies objects\n   */\n  @Get('/getAllMovies')\n  async getAllMovies(): Promise {\n    return await this.moviesService.getAllMovies();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MoviesModule.html":{"url":"modules/MoviesModule.html","title":"module - MoviesModule","body":"\n                   \n\n\n\n\n    Modules\n    MoviesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MoviesModule\n\n\n\ncluster_MoviesModule_providers\n\n\n\n\nMoviesService\n\nMoviesService\n\n\n\nMoviesModule\n\nMoviesModule\n\nMoviesModule -->\n\nMoviesService->MoviesModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nMoviesModule -->\n\nTheaterService->MoviesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/movies/movies.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Starting of movie module\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MoviesService\n                        \n                        \n                            TheaterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MoviesController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MoviesService } from './movies.service';\nimport { MoviesController } from './movies.controller';\nimport { Movies } from './../../entity/movies.entity';\nimport { Theater } from './../../entity/theater.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { TheaterService } from '../theater/theater.service';\n\n/**\n * Starting of movie module\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([Movies, Theater])],\n  providers: [MoviesService, TheaterService],\n  controllers: [MoviesController],\n})\nexport class MoviesModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MoviesService.html":{"url":"injectables/MoviesService.html","title":"injectable - MoviesService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MoviesService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/movies.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of movie service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addMovieDetails\n                            \n                            \n                                    Async\n                                getAllMovies\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(movieRepository: Repository, theaterService: TheaterService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/movies/movies.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        movieRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addMovieDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addMovieDetails(addMoviesDto: AddMoviesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addMoviesDto\n                                    \n                                                AddMoviesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of addMoviesDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        movie object , if movie is added Successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllMovies()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        all movies objects\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DataNotAdded } from 'src/common/filter/customException.exception';\nimport { Repository } from 'typeorm';\nimport { TheaterService } from '../theater/theater.service';\nimport { Movies } from './../../entity/movies.entity';\nimport { AddMoviesDto } from './addMovies.dto';\n\n\n/**\n * Starting of movie service\n */\n@Injectable()\nexport class MoviesService {\n  constructor(\n    @InjectRepository(Movies)\n    private movieRepository: Repository,\n    private theaterService: TheaterService,\n  ) {}\n\n  /**\n   *\n   * @param addMoviesDto accepts objects of addMoviesDto\n   * @returns movie object , if movie is added Successfully\n   */\n  async addMovieDetails(addMoviesDto: AddMoviesDto): Promise {\n    const movie: Movies = new Movies();\n    // const theater: Theater = new Theater();\n    const theaterResult = await this.theaterService.getTheaterByName(\n      addMoviesDto.location,\n      addMoviesDto.theaterName,\n    );\n    Object.assign(movie, addMoviesDto);\n    movie.isActive = true;\n    movie.updatedAt = '';\n    movie.updatedTime = '';\n    const date = new Date();\n    movie.createdAt = date.toLocaleDateString();\n    movie.createTime = date.toLocaleTimeString();\n    movie.theaters = theaterResult;\n    // Object.assign(theater, theaterResult);\n    // console.log('theater: ', theater);\n    movie.theaters = theaterResult;\n    const result = await this.movieRepository.save(movie);\n    if (result) {\n      return 'movies registered sucessfully';\n    } else {\n      throw new DataNotAdded();\n    }\n  }\n\n  /**\n   *\n   * @returns all movies objects\n   */\n  async getAllMovies(): Promise {\n    return await this.movieRepository.find({\n      isActive: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Payment.html":{"url":"classes/Payment.html","title":"class - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/payment.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                starting of User Entity\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                id\n                            \n                            \n                                location\n                            \n                            \n                                movieName\n                            \n                            \n                                price\n                            \n                            \n                                screenNo\n                            \n                            \n                                status\n                            \n                            \n                                theater\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:69\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:76\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:21\n                        \n                    \n\n            \n                \n                    auto incremental id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:29\n                        \n                    \n\n            \n                \n                    generates location column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:37\n                        \n                    \n\n            \n                \n                    generates movieName column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:46\n                        \n                    \n\n            \n                \n                    generates price column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        screenNo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:54\n                        \n                    \n\n            \n                \n                    generates screenNo column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:62\n                        \n                    \n\n            \n                \n                    generates boxPrice column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theater\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Theater\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {cascade: true, onDelete: 'RESTRICT', onUpdate: 'RESTRICT'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:100\n                        \n                    \n\n            \n                \n                    many-to-one between theater and payment\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, undefined, {cascade: true, onDelete: 'RESTRICT', onUpdate: 'RESTRICT'})@JoinColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/payment.entity.ts:88\n                        \n                    \n\n            \n                \n                    many-to-one between user and payment\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNumber, IsString } from \"class-validator\";\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToOne, JoinColumn } from \"typeorm\";\nimport { User } from \"./user.entity\";\nimport { Theater } from './theater.entity';\n\n/* eslint-disable prettier/prettier */\n\n/**\n * starting of User Entity\n */\n@Entity()\nexport class Payment {\n\n    /**\n     * auto incremental id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n    * generates location column\n    */\n    @Column()\n    @IsEmail()\n    @ApiProperty()\n    location: string;\n\n    /**\n     * generates movieName column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    movieName: string;\n\n\n    /**\n     * generates price column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    price: number;\n\n    /**\n    * generates screenNo column\n    */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    screenNo: number;\n\n    /**\n     * generates boxPrice column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    status: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    @IsString()\n    createdAt: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n    @IsString()\n    createTime: string;\n\n\n    /**\n     * many-to-one between user and payment\n     */\n    @ManyToOne(() => User, (user) => user.payment, {\n         cascade: true,\n         onDelete: \"RESTRICT\",\n         onUpdate: \"RESTRICT\",\n    })\n    @JoinColumn()\n    user: User;\n\n    /**\n   * many-to-one between theater and payment\n   */\n    @ManyToOne(() => Theater, (theater) => theater.payment, {\n         cascade: true,\n         onDelete: \"RESTRICT\",\n        onUpdate: \"RESTRICT\",\n        \n    })\n    @JoinColumn()\n    theater: Theater;\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PaymentController.html":{"url":"controllers/PaymentController.html","title":"controller - PaymentController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PaymentController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/payment/payment.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                payment\n            \n\n\n            \n                Description\n            \n            \n                Starting of payment controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPaymentDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPaymentDetails\n                        \n                    \n                \n            \n            \n                \naddPaymentDetails(addPaymentDto: AddPaymentDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/addPayment')\n                \n            \n\n            \n                \n                    Defined in src/modules/payment/payment.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addPaymentDto\n                                    \n                                                AddPaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of addPaymentDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        payment object , if user is payment Successfully\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AddPaymentDto } from './addPaymentDto';\nimport { PaymentService } from './payment.service';\n\n/**\n * Starting of payment controller\n */\n@Controller('payment')\n@ApiTags('payment')\nexport class PaymentController {\n  constructor(private readonly paymentService: PaymentService) {}\n\n  /**\n   *\n   * @param addPaymentDto accepts objects of addPaymentDto\n   * @returns payment object , if user is payment Successfully\n   */\n  @Post('/addPayment')\n  addPaymentDetails(@Body() addPaymentDto: AddPaymentDto): Promise {\n    return this.paymentService.addPaymentDetails(addPaymentDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PaymentModule.html":{"url":"modules/PaymentModule.html","title":"module - PaymentModule","body":"\n                   \n\n\n\n\n    Modules\n    PaymentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\n\nPaymentService\n\nPaymentService\n\n\n\nPaymentModule\n\nPaymentModule\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nPaymentModule -->\n\nTheaterService->PaymentModule\n\n\n\n\n\nUserService\n\nUserService\n\nPaymentModule -->\n\nUserService->PaymentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/payment/payment.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Starting of payment module\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PaymentService\n                        \n                        \n                            TheaterService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PaymentController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PaymentService } from './payment.service';\nimport { PaymentController } from './payment.controller';\nimport { Theater } from './../../entity/theater.entity';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Payment } from 'src/entity/payment.entity';\nimport { TheaterService } from '../theater/theater.service';\nimport { UserService } from './../user/user.service';\nimport { User } from 'src/entity/user.entity';\n\n/**\n * Starting of payment module\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([Payment, Theater, User])],\n  providers: [PaymentService, TheaterService, UserService],\n  controllers: [PaymentController],\n})\nexport class PaymentModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PaymentService.html":{"url":"injectables/PaymentService.html","title":"injectable - PaymentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PaymentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/payment/payment.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of payment service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addPaymentDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(paymentRepository: Repository, theaterService: TheaterService, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/payment/payment.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        paymentRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        theaterService\n                                                  \n                                                        \n                                                                        TheaterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addPaymentDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addPaymentDetails(addPaymentDto: AddPaymentDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/payment/payment.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addPaymentDto\n                                    \n                                                AddPaymentDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of addPaymentDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        payment object , if payment is added Successfully\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DataNotAdded } from 'src/common/filter/customException.exception';\nimport { Repository } from 'typeorm';\nimport { TheaterService } from '../theater/theater.service';\nimport { Payment } from './../../entity/payment.entity';\nimport { UserService } from './../user/user.service';\nimport { AddPaymentDto } from './addPaymentDto';\nimport { UnauthorizedException } from './../../common/filter/customException.exception';\n\n/**\n * Starting of payment service\n */\n@Injectable()\nexport class PaymentService {\n  constructor(\n    @InjectRepository(Payment)\n    private paymentRepository: Repository,\n    private theaterService: TheaterService,\n    private userService: UserService,\n  ) {}\n\n  /**\n   *\n   * @param addPaymentDto accepts objects of addPaymentDto\n   * @returns payment object , if payment is added Successfully\n   */\n  async addPaymentDetails(addPaymentDto: AddPaymentDto): Promise {\n    const userResult: any = await this.userService.getUserByEmail(\n      addPaymentDto.emailId,\n    );\n    if (userResult) {\n      const payment = new Payment();\n      const theaterResult: any = await this.theaterService.getTheaterByName(\n        addPaymentDto.location,\n        addPaymentDto.theaterName,\n      );\n      const date = new Date();\n      payment.createdAt = date.toLocaleDateString();\n      payment.createTime = date.toLocaleTimeString();\n      // payment.theater = theaterResult;\n      payment.user = userResult;\n      payment.status = 'done';\n      Object.assign(payment, addPaymentDto);\n      const result = await this.paymentRepository.save(payment);\n      if (result) {\n        return 'payment done sucessfully';\n      } else {\n        throw new DataNotAdded();\n      }\n    } else {\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SwaggerConfig.html":{"url":"interfaces/SwaggerConfig.html","title":"interface - SwaggerConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SwaggerConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/swagger/swagger.interface.ts\n        \n\n\n            \n                Description\n            \n            \n                interface of Swagger Config\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            tags\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            version\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tags\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tags:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        version:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SwaggerConfig {\n  title: string;\n  description: string;\n  version: string;\n  tags: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Theater.html":{"url":"classes/Theater.html","title":"class - Theater","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Theater\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/theater.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                starting of User Entity\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balconyPrice\n                            \n                            \n                                benchPrice\n                            \n                            \n                                boxPrice\n                            \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                location\n                            \n                            \n                                movies\n                            \n                            \n                                noOfScreens\n                            \n                            \n                                payment\n                            \n                            \n                                rating\n                            \n                            \n                                theaterName\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedTime\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balconyPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:77\n                        \n                    \n\n            \n                \n                    generates balconyPrice column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        benchPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:85\n                        \n                    \n\n            \n                \n                    generates benchPrice column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        boxPrice\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:69\n                        \n                    \n\n            \n                \n                    generates boxPrice column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:107\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:121\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:61\n                        \n                    \n\n            \n                \n                    generates description column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:21\n                        \n                    \n\n            \n                \n                    auto incremental id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:93\n                        \n                    \n\n            \n                \n                    generates isActive column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:37\n                        \n                    \n\n            \n                \n                    generates location column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Movies[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToMany(undefined, undefined, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:129\n                        \n                    \n\n            \n                \n                    mny to many between movies and theaters\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        noOfScreens\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:53\n                        \n                    \n\n            \n                \n                    generates noOfScreens column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:137\n                        \n                    \n\n            \n                \n                    one-to-many relationship between payment and theater\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:45\n                        \n                    \n\n            \n                \n                    generates rating column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        theaterName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:29\n                        \n                    \n\n            \n                \n                    generates UserName column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:100\n                        \n                    \n\n            \n                \n                    generates updatedAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/theater.entity.ts:114\n                        \n                    \n\n            \n                \n                    generates updatedTime column\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNumber, IsString } from \"class-validator\";\nimport { Entity, PrimaryGeneratedColumn, Column, ManyToMany, OneToMany } from \"typeorm\";\nimport { Movies } from './movies.entity';\nimport { Payment } from \"./payment.entity\";\n\n/* eslint-disable prettier/prettier */\n\n/**\n * starting of User Entity\n */\n@Entity()\nexport class Theater {\n\n    /**\n     * auto incremental id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * generates UserName column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    theaterName: string;\n\n    /**\n    * generates location column\n    */\n    @Column()\n    @IsEmail()\n    @ApiProperty()\n    location: string;\n\n    /**\n     * generates rating column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    rating: number;\n\n    /**\n    * generates noOfScreens column\n    */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    noOfScreens: number;\n\n    /**\n     * generates description column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    description: string;\n\n    /**\n     * generates boxPrice column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    boxPrice: number;\n\n    /**\n    * generates balconyPrice column\n    */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    balconyPrice: number;\n\n    /**\n   * generates benchPrice column\n   */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    benchPrice: number;\n\n\n    /**\n     * generates isActive column\n     */\n    @Column()\n    @ApiProperty()\n    isActive: boolean;\n\n    /**\n     * generates updatedAt column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedAt: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    @IsString()\n    createdAt: string;\n\n    /**\n     * generates updatedTime column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedTime: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n    @IsString()\n    createTime: string;\n\n    /**\n     * mny to many between movies and theaters\n     */\n    @ManyToMany(() => Movies, movies => movies.theaters, {\n        // cascade: true\n    })\n    movies: Movies[];\n\n    /**\n   * one-to-many relationship between payment and theater\n   */\n    @OneToMany(() => Payment, (payment) => payment.theater, {\n        // cascade: true\n    })\n    payment: Payment[];\n\n    // addTheater(m: Movies) {\n    //     if (this.movies == null) {\n    //         this.movies = new Array();\n    //     }\n    //     this.movies.push(m);\n    // }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TheaterController.html":{"url":"controllers/TheaterController.html","title":"controller - TheaterController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TheaterController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/theater/theater.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                theater\n            \n\n\n            \n                Description\n            \n            \n                Starting of theater controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTheaterDetails\n                            \n                            \n                                    Async\n                                getAllTheaters\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTheaterDetails\n                        \n                    \n                \n            \n            \n                \naddTheaterDetails(addtheaterDto: AddTheaterDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/addTheater')\n                \n            \n\n            \n                \n                    Defined in src/modules/theater/theater.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addtheaterDto\n                                    \n                                                AddTheaterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of addtheaterDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        theater object , if theater is added Successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTheaters\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTheaters()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getAllTheaters')\n                \n            \n\n            \n                \n                    Defined in src/modules/theater/theater.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        all ttheater objects ,\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Get, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AddTheaterDto } from './addTheater.dto';\nimport { TheaterService } from './theater.service';\n\n/**\n * Starting of theater controller\n */\n@Controller('theater')\n@ApiTags('theater')\nexport class TheaterController {\n  constructor(private readonly theaterService: TheaterService) {}\n\n  /**\n   *\n   * @param addtheaterDto accepts objects of addtheaterDto\n   * @returns theater object , if theater is added Successfully\n   */\n  @Post('/addTheater')\n  addTheaterDetails(@Body() addtheaterDto: AddTheaterDto): Promise {\n    return this.theaterService.addTheaterDetails(addtheaterDto);\n  }\n\n  /**\n   *\n   * @returns all ttheater objects ,\n   */\n  @Get('/getAllTheaters')\n  async getAllTheaters(): Promise {\n    return await this.theaterService.getAllTheater();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TheaterModule.html":{"url":"modules/TheaterModule.html","title":"module - TheaterModule","body":"\n                   \n\n\n\n\n    Modules\n    TheaterModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TheaterModule\n\n\n\ncluster_TheaterModule_exports\n\n\n\ncluster_TheaterModule_providers\n\n\n\n\nTheaterService \n\nTheaterService \n\n\n\nTheaterModule\n\nTheaterModule\n\nTheaterService  -->\n\nTheaterModule->TheaterService \n\n\n\n\n\nTheaterService\n\nTheaterService\n\nTheaterModule -->\n\nTheaterService->TheaterModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/theater/theater.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Starting of thater module\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TheaterService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TheaterController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TheaterService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Theater } from './../../entity/theater.entity';\nimport { TheaterController } from './theater.controller';\nimport { TheaterService } from './theater.service';\n\n/**\n * Starting of thater module\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([Theater])],\n  controllers: [TheaterController],\n  providers: [TheaterService],\n  exports: [TheaterService],\n})\nexport class TheaterModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TheaterService.html":{"url":"injectables/TheaterService.html","title":"injectable - TheaterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TheaterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/theater/theater.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of theater service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addTheaterDetails\n                            \n                            \n                                    Async\n                                getAllTheater\n                            \n                            \n                                    Async\n                                getTheaterByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(thaterRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/theater/theater.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        thaterRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addTheaterDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTheaterDetails(addtheaterDto: AddTheaterDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/theater/theater.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addtheaterDto\n                                    \n                                                AddTheaterDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of addtheaterDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        theater object , if theater is added Successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTheater\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTheater()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/theater/theater.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        al ttheater objects ,\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTheaterByName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTheaterByName(location: string, theaterName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/theater/theater.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives string as input\n\n                                    \n                                \n                                \n                                    theaterName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        recives string as input\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        theater object if data is founc\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DataNotAdded } from 'src/common/filter/customException.exception';\nimport { Repository } from 'typeorm';\nimport { Theater } from './../../entity/theater.entity';\nimport { AddTheaterDto } from './addTheater.dto';\n\n/**\n * Starting of theater service\n */\n@Injectable()\nexport class TheaterService {\n  constructor(\n    @InjectRepository(Theater)\n    private thaterRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param addtheaterDto accepts objects of addtheaterDto\n   * @returns theater object , if theater is added Successfully\n   */\n  async addTheaterDetails(addtheaterDto: AddTheaterDto): Promise {\n    const theater: Theater = new Theater();\n    Object.assign(theater, addtheaterDto);\n    theater.isActive = true;\n    theater.updatedAt = '';\n    theater.updatedTime = '';\n    const date = new Date();\n    theater.createdAt = date.toLocaleDateString();\n    theater.createTime = date.toLocaleTimeString();\n    const result = await this.thaterRepository.save(theater);\n    if (result) {\n      return 'theater added sucessfully';\n    } else {\n      throw new DataNotAdded();\n    }\n  }\n\n  /**\n   *\n   * @param location recives string as input\n   * @param theaterName recives string as input\n   * @returns theater object if data is founc\n   */\n  async getTheaterByName(location: string, theaterName: string) {\n    return await this.thaterRepository.find({\n      location: location,\n      theaterName: theaterName,\n    });\n  }\n\n  /**\n   *\n   * @returns al ttheater objects ,\n   */\n  async getAllTheater(): Promise {\n    return await this.thaterRepository.find({\n      isActive: true,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnauthorizedException.html":{"url":"classes/UnauthorizedException.html","title":"class - UnauthorizedException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnauthorizedException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filter/customException.exception.ts\n        \n\n\n            \n                Description\n            \n            \n                Staring point of UnauthorizedException exception\n\n            \n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/filter/customException.exception.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException } from \"@nestjs/common\";\nimport { HttpStatus } from '@nestjs/common';\n\n/**\n * Staring point of UnauthorizedException exception\n */\nexport class UnauthorizedException extends HttpException {\n    constructor() {\n        super(\"Invalid User\", HttpStatus.UNAUTHORIZED);\n    }\n}\n\n/**\n * @ignore\n */\nexport class UserNotFoundException extends HttpException {\n    constructor() {\n        super(\"User Not Found ,please log in to continue\", HttpStatus.NOT_FOUND);\n    }\n}\n\n/**\n * @ignore\n */\nexport class WrongCredentialsException extends HttpException {\n    constructor() {\n        super(\"Invalid Credentials\", HttpStatus.NOT_ACCEPTABLE);\n    }\n}\n\n/**\n * @ignore\n */\nexport class DataNotFoundException extends HttpException {\n    constructor() {\n        super(\"No data found\", HttpStatus.NOT_FOUND);\n    }\n}\n\n/**\n * @ignore\n */\nexport class AuthenticationException extends HttpException {\n    constructor() {\n        super(\"Authentication error\", HttpStatus.UNAUTHORIZED);\n    }\n}\n/**\n * @ignore\n */\nexport class DataNotAdded extends HttpException {\n    constructor() {\n        super(\"data not added succefully\", HttpStatus.BAD_REQUEST);\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/entity/user.entity.ts\n        \n\n\n            \n                Description\n            \n            \n                starting of User Entity\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createTime\n                            \n                            \n                                emailId\n                            \n                            \n                                id\n                            \n                            \n                                isActive\n                            \n                            \n                                password\n                            \n                            \n                                    Static\n                                password\n                            \n                            \n                                payment\n                            \n                            \n                                phoneNum\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedTime\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                strongPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:75\n                        \n                    \n\n            \n                \n                    generates createdAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:89\n                        \n                    \n\n            \n                \n                    generates createTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsEmail()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:37\n                        \n                    \n\n            \n                \n                    generates emailId column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:21\n                        \n                    \n\n            \n                \n                    auto incremental id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:61\n                        \n                    \n\n            \n                \n                    generates isActive column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:45\n                        \n                    \n\n            \n                \n                    generates password column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        payment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Payment[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, undefined, {})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:108\n                        \n                    \n\n            \n                \n                    one-to-many relationship between payment and user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        phoneNum\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsNumber()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:54\n                        \n                    \n\n            \n                \n                    generates phoneNum column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:68\n                        \n                    \n\n            \n                \n                    generates updatedAt column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: ' '})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:82\n                        \n                    \n\n            \n                \n                    generates updatedTime column\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()@IsString()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/entity/user.entity.ts:29\n                        \n                    \n\n            \n                \n                    generates UserName column\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        strongPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    strongPassword()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @BeforeInsert()\n                \n            \n\n            \n                \n                    Defined in src/entity/user.entity.ts:97\n                \n            \n\n\n            \n                \n                    generates a bcrypted password ie hashed password\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport * as bcrypt from 'bcrypt';\nimport { IsEmail, IsNumber, IsString } from \"class-validator\";\nimport { Entity, PrimaryGeneratedColumn, Column, BeforeInsert, OneToMany } from \"typeorm\";\nimport { Payment } from \"./payment.entity\";\n\n/* eslint-disable prettier/prettier */\n\n/**\n * starting of User Entity\n */\n@Entity()\nexport class User {\n\n    /**\n     * auto incremental id\n     */\n    @PrimaryGeneratedColumn()\n    id: number;\n\n    /**\n     * generates UserName column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    userName: string;\n\n    /**\n    * generates emailId column\n    */\n    @Column()\n    @IsEmail()\n    @ApiProperty()\n    emailId: string;\n\n    /**\n     * generates password column\n     */\n    @Column()\n    @IsString()\n    @ApiProperty()\n    password: string;\n\n\n    /**\n     * generates phoneNum column\n     */\n    @Column()\n    @IsNumber()\n    @ApiProperty()\n    phoneNum: number;\n\n    /**\n     * generates isActive column\n     */\n    @Column()\n    @ApiProperty()\n    isActive: boolean;\n\n    /**\n     * generates updatedAt column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedAt: string;\n\n    /**\n     * generates createdAt column\n     */\n    @Column()\n    @IsString()\n    createdAt: string;\n\n    /**\n     * generates updatedTime column\n     */\n    @Column({ default: ' ' })\n    @IsString()\n    updatedTime: string;\n\n    /**\n     * generates createTime column\n     */\n    @Column()\n    @IsString()\n    createTime: string;\n\n    static password: any;\n\n    /**\n     * generates a bcrypted password ie hashed password\n     */\n    @BeforeInsert()\n    async strongPassword() {\n        console.log(\"enterd\");\n        this.password = await bcrypt.hash(this.password, 10);\n    }\n\n    /**\n     * one-to-many relationship between payment and user\n     */\n    @OneToMany(() => Payment, (payment) => payment.user, {\n        // cascade: true\n    })\n    payment: Payment[];\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n            \n                Description\n            \n            \n                Starting of user controller\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addUserDetails\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addUserDetails\n                        \n                    \n                \n            \n            \n                \naddUserDetails(addUserDto: AddUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/addUser')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addUserDto\n                                    \n                                                AddUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of adduserDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        user object , if user is added Successfully\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport { AddUserDto } from './addUser.dto';\nimport { UserService } from './user.service';\n\n/**\n * Starting of user controller\n */\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  /**\n   *\n   * @param addUserDto accepts objects of adduserDto\n   * @returns user object , if user is added Successfully\n   */\n  @Post('/addUser')\n  addUserDetails(@Body() addUserDto: AddUserDto): Promise {\n    return this.userService.addUserDetails(addUserDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUserModule\n\nUserModule\n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            Starting of user module\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from 'src/entity/user.entity';\nimport { UserController } from './user.controller';\nimport { UserService } from './user.service';\n\n/**\n * Starting of user module\n */\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n\n  controllers: [UserController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting of user service\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUserDetails\n                            \n                            \n                                    Async\n                                getUserByEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUserDetails\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUserDetails(addUserDto: AddUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    addUserDto\n                                    \n                                                AddUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts objects of adduserDto\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        user object , if user is added Successfully\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserByEmail(emailId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { DataNotAdded } from 'src/common/filter/customException.exception';\nimport { User } from 'src/entity/user.entity';\nimport { Repository } from 'typeorm';\nimport { AddUserDto } from './addUser.dto';\n\n/**\n * Starting of user service\n */\n@Injectable()\nexport class UserService {\n  constructor(\n    @InjectRepository(User)\n    private userRepository: Repository,\n  ) {}\n\n  /**\n   *\n   * @param addUserDto accepts objects of adduserDto\n   * @returns user object , if user is added Successfully\n   */\n  async addUserDetails(addUserDto: AddUserDto): Promise {\n    const user: User = new User();\n    Object.assign(user, addUserDto);\n    user.isActive = true;\n    user.updatedAt = '';\n    user.updatedTime = '';\n    const date = new Date();\n    user.createdAt = date.toLocaleDateString();\n    user.createTime = date.toLocaleTimeString();\n    const result = await this.userRepository.save(user);\n    if (result) {\n      return 'user registered sucessfully';\n    } else {\n      throw new DataNotAdded();\n    }\n  }\n\n  async getUserByEmail(emailId: string) {\n    return await this.userRepository.findOne({\n      emailId: emailId,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/ValidationPipe.ts\n        \n\n\n            \n                Description\n            \n            \n                Starting point of ValidationPipe\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/ValidationPipe.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/ValidationPipe.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PipeTransform, Injectable, ArgumentMetadata, BadRequestException } from '@nestjs/common';\nimport { validate } from 'class-validator';\nimport { plainToClass } from 'class-transformer';\n\n/**\n * Starting point of ValidationPipe\n */\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n    async transform(value: any, { metatype }: ArgumentMetadata) {\n        if (!metatype || !this.toValidate(metatype)) {\n            return value;\n        }\n        const object = plainToClass(metatype, value);\n        const errors = await validate(object);\n        if (errors.length > 0) {\n            throw new BadRequestException('Validation failed');\n        }\n        return value;\n    }\n\n    private toValidate(metatype: Function): boolean {\n        const types: Function[] = [String, Boolean, Number, Array, Object];\n        return !types.includes(metatype);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/filter/HttpExceptionFilter.exception.ts\n            \n            class\n            HttpExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filter/customException.exception.ts\n            \n            class\n            UnauthorizedException\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/common/pipes/ValidationPipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/config/swagger/swagger.config.ts\n            \n            variable\n            SWAGGER_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/swagger/swagger.interface.ts\n            \n            interface\n            SwaggerConfig\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/config/swagger/swagger.ts\n            \n            function\n            createDocument\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/entity/movies.entity.ts\n            \n            class\n            Movies\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/entity/payment.entity.ts\n            \n            class\n            Payment\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                src/entity/theater.entity.ts\n            \n            class\n            Theater\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/entity/user.entity.ts\n            \n            class\n            User\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/movies/addMovies.dto.ts\n            \n            class\n            AddMoviesDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/movies/movies.controller.ts\n            \n            controller\n            MoviesController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/movies/movies.service.ts\n            \n            injectable\n            MoviesService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/modules/payment/addPaymentDto.ts\n            \n            class\n            AddPaymentDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/payment/payment.controller.ts\n            \n            controller\n            PaymentController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/modules/payment/payment.service.ts\n            \n            injectable\n            PaymentService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/theater/addTheater.dto.ts\n            \n            class\n            AddTheaterDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/theater/theater.controller.ts\n            \n            controller\n            TheaterController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/theater/theater.service.ts\n            \n            injectable\n            TheaterService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/modules/user/addUser.dto.ts\n            \n            class\n            AddUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                25 %\n                (1/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.0\n        \n            @nestjs/typeorm : ^8.0.3\n        \n            bcrypt : ^5.0.1\n        \n            cache-manager : ^3.6.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            cookie-parser : ^1.4.6\n        \n            mysql2 : ^2.3.3\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.3.0\n        \n            typeorm : ^0.2.41\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            createDocument   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n            \n                \n                    Starting of function bootstrap\n\n\n                \n            \n        \n    \n    src/config/swagger/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createDocument\n                        \n                    \n                \n            \n            \n                \ncreateDocument(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        accepts data of type INestApplication\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OpenAPIObject\n\n                    \n                    \n                        an OpenAPIObject object\n\n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MoviesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PaymentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TheaterModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_MoviesModule\n\n\n\ncluster_MoviesModule_providers\n\n\n\ncluster_PaymentModule\n\n\n\ncluster_PaymentModule_providers\n\n\n\ncluster_TheaterModule\n\n\n\ncluster_TheaterModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\n\nMoviesModule\n\nMoviesModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nMoviesModule->AppModule\n\n\n\n\n\nPaymentModule\n\nPaymentModule\n\nAppModule -->\n\nPaymentModule->AppModule\n\n\n\n\n\nTheaterModule\n\nTheaterModule\n\nAppModule -->\n\nTheaterModule->AppModule\n\n\n\n\n\nTheaterService \n\nTheaterService \n\nTheaterService  -->\n\nTheaterModule->TheaterService \n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nMoviesService\n\nMoviesService\n\nMoviesModule -->\n\nMoviesService->MoviesModule\n\n\n\n\n\nTheaterService\n\nTheaterService\n\nMoviesModule -->\n\nTheaterService->MoviesModule\n\n\n\nPaymentModule -->\n\nTheaterService->PaymentModule\n\n\n\nTheaterModule -->\n\nTheaterService->TheaterModule\n\n\n\n\n\nPaymentService\n\nPaymentService\n\nPaymentModule -->\n\nPaymentService->PaymentModule\n\n\n\n\n\nUserService\n\nUserService\n\nPaymentModule -->\n\nUserService->PaymentModule\n\n\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    10 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            SWAGGER_CONFIG   (src/.../swagger.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/swagger/swagger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SWAGGER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SwaggerConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  title: 'Tasks App Mgmnt',\n  description: ' Task Mgmnt Opertaions ',\n  version: '1.0',\n  tags: ['Task Mgmnt'],\n  \n}\n                    \n                \n\n            \n                \n                    swagger confifg properties\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
